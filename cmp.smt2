(set-logic QF_LRA)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun x10 () Real)
(declare-fun x11 () Real)
(declare-fun x12 () Real)
(declare-fun x13 () Real)
(declare-fun ite303_1 () Real)
(declare-fun ite554_1 () Real)
(declare-fun ite800_1 () Real)
(declare-fun ite1046_1 () Real)
(declare-fun ite1315_1 () Real)
(declare-fun ite1584_1 () Real)
(declare-fun ite1853_1 () Real)
(declare-fun ite2099_1 () Real)
(declare-fun ite2345_1 () Real)
(declare-fun ite2591_1 () Real)
(declare-fun ite2860_1 () Real)
(declare-fun ite3106_1 () Real)
(declare-fun ite3375_1 () Real)
(declare-fun ite3621_1 () Real)
(declare-fun ite3890_1 () Real)
(declare-fun ite4136_1 () Real)
(declare-fun ite4405_1 () Real)
(declare-fun ite4651_1 () Real)
(declare-fun ite4920_1 () Real)
(declare-fun ite5189_1 () Real)
(declare-fun ite5458_1 () Real)
(declare-fun ite5727_1 () Real)
(declare-fun ite5973_1 () Real)
(declare-fun ite6242_1 () Real)
(declare-fun ite6511_1 () Real)
(declare-fun ite6780_1 () Real)
(declare-fun ite7049_1 () Real)
(declare-fun ite7318_1 () Real)
(declare-fun ite7587_1 () Real)
(declare-fun ite7856_1 () Real)
(declare-fun ite8125_1 () Real)
(declare-fun ite8394_1 () Real)
(declare-fun ite8640_1 () Real)
(declare-fun ite8909_1 () Real)
(declare-fun ite9178_1 () Real)
(declare-fun ite9447_1 () Real)
(declare-fun ite9716_1 () Real)
(declare-fun ite9985_1 () Real)
(declare-fun ite10254_1 () Real)
(declare-fun ite10523_1 () Real)
(declare-fun ite10769_1 () Real)
(declare-fun ite11015_1 () Real)
(declare-fun ite11284_1 () Real)
(declare-fun ite11553_1 () Real)
(declare-fun ite11822_1 () Real)
(declare-fun ite12091_1 () Real)
(declare-fun ite12337_1 () Real)
(declare-fun ite12606_1 () Real)
(declare-fun ite12875_1 () Real)
(declare-fun ite13121_1 () Real)

(assert

(let ((?defD (and (<= 29 x1)
 (<= (- 77) (* (- 1) x1))
 (<= 0 x2)
 (<= (- 1) (* (- 1) x2))
 (<= 0 x3)
 (<= (- 3) (* (- 1) x3))
 (<= 94 x4)
 (<= (- 200) (* (- 1) x4))
 (<= 126 x5)
 (<= (- 594) (* (- 1) x5))
 (<= 0 x6)
 (<= (- 1) (* (- 1) x6))
 (<= 0 x7)
 (<= (- 2) (* (- 1) x7))
 (<= 71 x8)
 (<= (- 202) (* (- 1) x8))
 (<= 0 x9)
 (<= (- 1) (* (- 1) x9))
 (<= 0 x10)
 (<= (/ (- 31) 5) (* (- 1) x10))
 (<= 0 x11)
 (<= (- 2) (* (- 1) x11))
 (<= 0 x12)
 (<= (- 4) (* (- 1) x12))
 (<= 0 x13)
 (<= (- 3) (* (- 1) x13))
)))

(let ((?def0 (= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455)) (* (/ (- 200000) 50491) ite303_1)))))
(let ((?def1 (not (<= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455)))))))
(let ((?def2 (or ?def1 ?def0)))
(let ((?def3 (= 0 ite303_1)))
(let ((?def4 (or (<= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455)))) ?def3)))
(let ((?def5 (and ?def4 ?def2)))
(let ((?def6 (= 0 (+ x1 (* x2 (/ 171061 165932)) (* x3 (/ (- 43546) 41483)) (* x4 (/ (- 50577) 41483)) (* x5 (/ 308539 165932)) (* x6 (/ (- 146891) 165932)) (* x7 (/ (- 104295) 82966)) (* x8 (/ 25001 82966)) (* x9 (/ 41465 165932)) (* x10 (/ 59773 41483)) (* x11 (/ 155253 165932)) (* x12 (/ (- 25442) 41483)) (* x13 (/ (- 75883) 41483)) (* (/ 250000 41483) ite554_1)))))
(let ((?def7 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 171061) 165932)) (* x3 (/ 43546 41483)) (* x4 (/ 50577 41483)) (* x5 (/ (- 308539) 165932)) (* x6 (/ 146891 165932)) (* x7 (/ 104295 82966)) (* x8 (/ (- 25001) 82966)) (* x9 (/ (- 41465) 165932)) (* x10 (/ (- 59773) 41483)) (* x11 (/ (- 155253) 165932)) (* x12 (/ 25442 41483)) (* x13 (/ 75883 41483)))))))
(let ((?def8 (or ?def7 ?def6)))
(let ((?def9 (= 0 ite554_1)))
(let ((?def10 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 171061) 165932)) (* x3 (/ 43546 41483)) (* x4 (/ 50577 41483)) (* x5 (/ (- 308539) 165932)) (* x6 (/ 146891 165932)) (* x7 (/ 104295 82966)) (* x8 (/ (- 25001) 82966)) (* x9 (/ (- 41465) 165932)) (* x10 (/ (- 59773) 41483)) (* x11 (/ (- 155253) 165932)) (* x12 (/ 25442 41483)) (* x13 (/ 75883 41483)))) ?def9)))
(let ((?def11 (and ?def10 ?def8)))
(let ((?def12 (= 0 (+ x1 (* x2 (/ 261427 149915)) (* x3 (/ 178262 149915)) (* x4 (/ (- 23612) 149915)) (* x5 (/ 81984 149915)) (* x6 (/ 140658 149915)) (* x7 (/ (- 89407) 149915)) (* x8 (/ 260566 149915)) (* x9 (/ 239598 149915)) (* x10 (/ 245773 149915)) (* x11 (/ 22559 29983)) (* x12 (/ 3553 149915)) (* x13 (/ 14716 149915)) (* (/ 200000 29983) ite800_1)))))
(let ((?def13 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 261427) 149915)) (* x3 (/ (- 178262) 149915)) (* x4 (/ 23612 149915)) (* x5 (/ (- 81984) 149915)) (* x6 (/ (- 140658) 149915)) (* x7 (/ 89407 149915)) (* x8 (/ (- 260566) 149915)) (* x9 (/ (- 239598) 149915)) (* x10 (/ (- 245773) 149915)) (* x11 (/ (- 22559) 29983)) (* x12 (/ (- 3553) 149915)) (* x13 (/ (- 14716) 149915)))))))
(let ((?def14 (or ?def13 ?def12)))
(let ((?def15 (= 0 ite800_1)))
(let ((?def16 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 261427) 149915)) (* x3 (/ (- 178262) 149915)) (* x4 (/ 23612 149915)) (* x5 (/ (- 81984) 149915)) (* x6 (/ (- 140658) 149915)) (* x7 (/ 89407 149915)) (* x8 (/ (- 260566) 149915)) (* x9 (/ (- 239598) 149915)) (* x10 (/ (- 245773) 149915)) (* x11 (/ (- 22559) 29983)) (* x12 (/ (- 3553) 149915)) (* x13 (/ (- 14716) 149915)))) ?def15)))
(let ((?def17 (and ?def16 ?def14)))
(let ((?def18 (= 0 (+ x1 (* x2 (/ (- 81084) 162611)) (* x3 (/ 51427 162611)) (* x4 (/ 244771 162611)) (* x5 (/ 303116 162611)) (* x6 (/ 44616 162611)) (* x7 (/ 242593 162611)) (* x8 (/ (- 68589) 162611)) (* x9 (/ 307260 162611)) (* x10 (/ (- 235110) 162611)) (* x11 (/ 86091 162611)) (* x12 (/ (- 148949) 162611)) (* x13 (/ 33585 162611)) (* (/ 1000000 162611) ite1046_1)))))
(let ((?def19 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 81084 162611)) (* x3 (/ (- 51427) 162611)) (* x4 (/ (- 244771) 162611)) (* x5 (/ (- 303116) 162611)) (* x6 (/ (- 44616) 162611)) (* x7 (/ (- 242593) 162611)) (* x8 (/ 68589 162611)) (* x9 (/ (- 307260) 162611)) (* x10 (/ 235110 162611)) (* x11 (/ (- 86091) 162611)) (* x12 (/ 148949 162611)) (* x13 (/ (- 33585) 162611)))))))
(let ((?def20 (or ?def19 ?def18)))
(let ((?def21 (= 0 ite1046_1)))
(let ((?def22 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 81084 162611)) (* x3 (/ (- 51427) 162611)) (* x4 (/ (- 244771) 162611)) (* x5 (/ (- 303116) 162611)) (* x6 (/ (- 44616) 162611)) (* x7 (/ (- 242593) 162611)) (* x8 (/ 68589 162611)) (* x9 (/ (- 307260) 162611)) (* x10 (/ 235110 162611)) (* x11 (/ (- 86091) 162611)) (* x12 (/ 148949 162611)) (* x13 (/ (- 33585) 162611)))) ?def21)))
(let ((?def23 (and ?def22 ?def20)))
(let ((?def24 (= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475)) (* (/ (- 20000) 5539) ite1315_1)))))
(let ((?def25 (not (<= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475)))))))
(let ((?def26 (or ?def25 ?def24)))
(let ((?def27 (= 0 ite1315_1)))
(let ((?def28 (or (<= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475)))) ?def27)))
(let ((?def29 (and ?def28 ?def26)))
(let ((?def30 (= (/ 860 127429) (+ x1 (* x2 (/ 37166 127429)) (* x3 (/ 380479 254858)) (* x4 (/ (- 151193) 127429)) (* x5 (/ (- 74245) 254858)) (* x6 (/ (- 263679) 254858)) (* x7 (/ 89401 254858)) (* x8 (/ 39532 127429)) (* x9 (/ (- 173186) 127429)) (* x10 (/ (- 18569) 254858)) (* x11 (/ 31189 254858)) (* x12 (/ (- 105434) 127429)) (* x13 (/ (- 111634) 127429)) (* (/ 500000 127429) ite1584_1)))))
(let ((?def31 (not (<= (/ (- 860) 127429) (+ (* (- 1) x1) (* x2 (/ (- 37166) 127429)) (* x3 (/ (- 380479) 254858)) (* x4 (/ 151193 127429)) (* x5 (/ 74245 254858)) (* x6 (/ 263679 254858)) (* x7 (/ (- 89401) 254858)) (* x8 (/ (- 39532) 127429)) (* x9 (/ 173186 127429)) (* x10 (/ 18569 254858)) (* x11 (/ (- 31189) 254858)) (* x12 (/ 105434 127429)) (* x13 (/ 111634 127429)))))))
(let ((?def32 (or ?def31 ?def30)))
(let ((?def33 (= 0 ite1584_1)))
(let ((?def34 (or (<= (/ (- 860) 127429) (+ (* (- 1) x1) (* x2 (/ (- 37166) 127429)) (* x3 (/ (- 380479) 254858)) (* x4 (/ 151193 127429)) (* x5 (/ 74245 254858)) (* x6 (/ 263679 254858)) (* x7 (/ (- 89401) 254858)) (* x8 (/ (- 39532) 127429)) (* x9 (/ 173186 127429)) (* x10 (/ 18569 254858)) (* x11 (/ (- 31189) 254858)) (* x12 (/ 105434 127429)) (* x13 (/ 111634 127429)))) ?def33)))
(let ((?def35 (and ?def34 ?def32)))
(let ((?def36 (= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398)) (* (/ (- 500000) 68097) ite1853_1)))))
(let ((?def37 (not (<= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398)))))))
(let ((?def38 (or ?def37 ?def36)))
(let ((?def39 (= 0 ite1853_1)))
(let ((?def40 (or (<= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398)))) ?def39)))
(let ((?def41 (and ?def40 ?def38)))
(let ((?def42 (= 0 (+ x1 (* x2 (/ (- 194265) 88841)) (* x3 (/ 305908 88841)) (* x4 (/ 262060 88841)) (* x5 (/ (- 19596) 88841)) (* x6 (/ (- 306929) 88841)) (* x7 (/ (- 88258) 88841)) (* x8 (/ 162210 88841)) (* x9 (/ (- 189944) 88841)) (* x10 (/ 70164 88841)) (* x11 (/ (- 292434) 88841)) (* x12 (/ 153056 88841)) (* x13 (/ 108856 88841)) (* (/ 1000000 88841) ite2099_1)))))
(let ((?def43 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 194265 88841)) (* x3 (/ (- 305908) 88841)) (* x4 (/ (- 262060) 88841)) (* x5 (/ 19596 88841)) (* x6 (/ 306929 88841)) (* x7 (/ 88258 88841)) (* x8 (/ (- 162210) 88841)) (* x9 (/ 189944 88841)) (* x10 (/ (- 70164) 88841)) (* x11 (/ 292434 88841)) (* x12 (/ (- 153056) 88841)) (* x13 (/ (- 108856) 88841)))))))
(let ((?def44 (or ?def43 ?def42)))
(let ((?def45 (= 0 ite2099_1)))
(let ((?def46 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 194265 88841)) (* x3 (/ (- 305908) 88841)) (* x4 (/ (- 262060) 88841)) (* x5 (/ 19596 88841)) (* x6 (/ 306929 88841)) (* x7 (/ 88258 88841)) (* x8 (/ (- 162210) 88841)) (* x9 (/ 189944 88841)) (* x10 (/ (- 70164) 88841)) (* x11 (/ 292434 88841)) (* x12 (/ (- 153056) 88841)) (* x13 (/ (- 108856) 88841)))) ?def45)))
(let ((?def47 (and ?def46 ?def44)))
(let ((?def48 (= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844)) (* (/ (- 125000) 29711) ite2345_1)))))
(let ((?def49 (not (<= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844)))))))
(let ((?def50 (or ?def49 ?def48)))
(let ((?def51 (= 0 ite2345_1)))
(let ((?def52 (or (<= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844)))) ?def51)))
(let ((?def53 (and ?def52 ?def50)))
(let ((?def54 (= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720)) (* (/ (- 12500) 1159) ite2591_1)))))
(let ((?def55 (not (<= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720)))))))
(let ((?def56 (or ?def55 ?def54)))
(let ((?def57 (= 0 ite2591_1)))
(let ((?def58 (or (<= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720)))) ?def57)))
(let ((?def59 (and ?def58 ?def56)))
(let ((?def60 (= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688)) (* (/ (- 62500) 293) ite2860_1)))))
(let ((?def61 (not (<= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688)))))))
(let ((?def62 (or ?def61 ?def60)))
(let ((?def63 (= 0 ite2860_1)))
(let ((?def64 (or (<= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688)))) ?def63)))
(let ((?def65 (and ?def64 ?def62)))
(let ((?def66 (= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072)) (* (/ (- 62500) 2817) ite3106_1)))))
(let ((?def67 (not (<= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072)))))))
(let ((?def68 (or ?def67 ?def66)))
(let ((?def69 (= 0 ite3106_1)))
(let ((?def70 (or (<= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072)))) ?def69)))
(let ((?def71 (and ?def70 ?def68)))
(let ((?def72 (= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674)) (* (/ (- 500000) 70337) ite3375_1)))))
(let ((?def73 (not (<= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674)))))))
(let ((?def74 (or ?def73 ?def72)))
(let ((?def75 (= 0 ite3375_1)))
(let ((?def76 (or (<= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674)))) ?def75)))
(let ((?def77 (and ?def76 ?def74)))
(let ((?def78 (= 0 (+ x1 (* x2 (/ (- 3170) 3051)) (* x3 (/ (- 132016) 131193)) (* x4 (/ (- 187325) 262386)) (* x5 (/ 64970 131193)) (* x6 (/ 95051 87462)) (* x7 (/ (- 35644) 43731)) (* x8 (/ 86297 131193)) (* x9 (/ (- 287431) 262386)) (* x10 (/ 16279 29154)) (* x11 (/ 126493 262386)) (* x12 (/ (- 253381) 262386)) (* x13 (/ (- 257375) 262386)) (* (/ 500000 131193) ite3621_1)))))
(let ((?def79 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 3170 3051)) (* x3 (/ 132016 131193)) (* x4 (/ 187325 262386)) (* x5 (/ (- 64970) 131193)) (* x6 (/ (- 95051) 87462)) (* x7 (/ 35644 43731)) (* x8 (/ (- 86297) 131193)) (* x9 (/ 287431 262386)) (* x10 (/ (- 16279) 29154)) (* x11 (/ (- 126493) 262386)) (* x12 (/ 253381 262386)) (* x13 (/ 257375 262386)))))))
(let ((?def80 (or ?def79 ?def78)))
(let ((?def81 (= 0 ite3621_1)))
(let ((?def82 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 3170 3051)) (* x3 (/ 132016 131193)) (* x4 (/ 187325 262386)) (* x5 (/ (- 64970) 131193)) (* x6 (/ (- 95051) 87462)) (* x7 (/ 35644 43731)) (* x8 (/ (- 86297) 131193)) (* x9 (/ 287431 262386)) (* x10 (/ (- 16279) 29154)) (* x11 (/ (- 126493) 262386)) (* x12 (/ 253381 262386)) (* x13 (/ 257375 262386)))) ?def81)))
(let ((?def83 (and ?def82 ?def80)))
(let ((?def84 (= (/ 3087 26510) (+ x1 (* x2 (/ (- 17486) 10845)) (* x3 (/ 17927 15906)) (* x4 (/ 6491 21690)) (* x5 (/ (- 53887) 79530)) (* x6 (/ (- 19182) 13255)) (* x7 (/ (- 68839) 119295)) (* x8 (/ 73702 119295)) (* x9 (/ 13546 39765)) (* x10 (/ (- 124423) 119295)) (* x11 (/ (- 270469) 238590)) (* x12 (/ (- 34073) 26510)) (* x13 (/ (- 342961) 238590)) (* (/ 100000 23859) ite3890_1)))))
(let ((?def85 (not (<= (/ (- 3087) 26510) (+ (* (- 1) x1) (* x2 (/ 17486 10845)) (* x3 (/ (- 17927) 15906)) (* x4 (/ (- 6491) 21690)) (* x5 (/ 53887 79530)) (* x6 (/ 19182 13255)) (* x7 (/ 68839 119295)) (* x8 (/ (- 73702) 119295)) (* x9 (/ (- 13546) 39765)) (* x10 (/ 124423 119295)) (* x11 (/ 270469 238590)) (* x12 (/ 34073 26510)) (* x13 (/ 342961 238590)))))))
(let ((?def86 (or ?def85 ?def84)))
(let ((?def87 (= 0 ite3890_1)))
(let ((?def88 (or (<= (/ (- 3087) 26510) (+ (* (- 1) x1) (* x2 (/ 17486 10845)) (* x3 (/ (- 17927) 15906)) (* x4 (/ (- 6491) 21690)) (* x5 (/ 53887 79530)) (* x6 (/ 19182 13255)) (* x7 (/ 68839 119295)) (* x8 (/ (- 73702) 119295)) (* x9 (/ (- 13546) 39765)) (* x10 (/ 124423 119295)) (* x11 (/ 270469 238590)) (* x12 (/ 34073 26510)) (* x13 (/ 342961 238590)))) ?def87)))
(let ((?def89 (and ?def88 ?def86)))
(let ((?def90 (= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545)) (* (/ (- 200000) 6509) ite4136_1)))))
(let ((?def91 (not (<= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545)))))))
(let ((?def92 (or ?def91 ?def90)))
(let ((?def93 (= 0 ite4136_1)))
(let ((?def94 (or (<= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545)))) ?def93)))
(let ((?def95 (and ?def94 ?def92)))
(let ((?def96 (= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921)) (* (/ (- 1000000) 280921) ite4405_1)))))
(let ((?def97 (not (<= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921)))))))
(let ((?def98 (or ?def97 ?def96)))
(let ((?def99 (= 0 ite4405_1)))
(let ((?def100 (or (<= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921)))) ?def99)))
(let ((?def101 (and ?def100 ?def98)))
(let ((?def102 (= 0 (+ x1 (* x2 (/ (- 1429) 20715)) (* x3 (/ (- 77923) 82860)) (* x4 (/ 14603 41430)) (* x5 (/ 18107 20715)) (* x6 (/ 200383 248580)) (* x7 (/ 4244 20715)) (* x8 (/ (- 42581) 248580)) (* x9 (/ 86363 248580)) (* x10 (/ (- 13775) 49716)) (* x11 (/ (- 46936) 62145)) (* x12 (/ (- 96929) 124290)) (* x13 (/ 12113 16572)) (* (/ 50000 12429) ite4651_1)))))
(let ((?def103 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 1429 20715)) (* x3 (/ 77923 82860)) (* x4 (/ (- 14603) 41430)) (* x5 (/ (- 18107) 20715)) (* x6 (/ (- 200383) 248580)) (* x7 (/ (- 4244) 20715)) (* x8 (/ 42581 248580)) (* x9 (/ (- 86363) 248580)) (* x10 (/ 13775 49716)) (* x11 (/ 46936 62145)) (* x12 (/ 96929 124290)) (* x13 (/ (- 12113) 16572)))))))
(let ((?def104 (or ?def103 ?def102)))
(let ((?def105 (= 0 ite4651_1)))
(let ((?def106 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 1429 20715)) (* x3 (/ 77923 82860)) (* x4 (/ (- 14603) 41430)) (* x5 (/ (- 18107) 20715)) (* x6 (/ (- 200383) 248580)) (* x7 (/ (- 4244) 20715)) (* x8 (/ 42581 248580)) (* x9 (/ (- 86363) 248580)) (* x10 (/ 13775 49716)) (* x11 (/ 46936 62145)) (* x12 (/ 96929 124290)) (* x13 (/ (- 12113) 16572)))) ?def105)))
(let ((?def107 (and ?def106 ?def104)))
(let ((?def108 (= (/ 2227 294733) (+ x1 (* x2 (/ 115056 294733)) (* x3 (/ (- 107099) 294733)) (* x4 (/ 67928 294733)) (* x5 (/ (- 245201) 294733)) (* x6 (/ (- 285470) 294733)) (* x7 (/ 44824 294733)) (* x8 (/ (- 285133) 294733)) (* x9 (/ (- 3168) 5561)) (* x10 (/ (- 98766) 294733)) (* x11 (/ (- 245928) 294733)) (* x12 (/ (- 68504) 294733)) (* x13 (/ (- 234571) 294733)) (* (/ 1000000 294733) ite4920_1)))))
(let ((?def109 (not (<= (/ (- 2227) 294733) (+ (* (- 1) x1) (* x2 (/ (- 115056) 294733)) (* x3 (/ 107099 294733)) (* x4 (/ (- 67928) 294733)) (* x5 (/ 245201 294733)) (* x6 (/ 285470 294733)) (* x7 (/ (- 44824) 294733)) (* x8 (/ 285133 294733)) (* x9 (/ 3168 5561)) (* x10 (/ 98766 294733)) (* x11 (/ 245928 294733)) (* x12 (/ 68504 294733)) (* x13 (/ 234571 294733)))))))
(let ((?def110 (or ?def109 ?def108)))
(let ((?def111 (= 0 ite4920_1)))
(let ((?def112 (or (<= (/ (- 2227) 294733) (+ (* (- 1) x1) (* x2 (/ (- 115056) 294733)) (* x3 (/ 107099 294733)) (* x4 (/ (- 67928) 294733)) (* x5 (/ 245201 294733)) (* x6 (/ 285470 294733)) (* x7 (/ (- 44824) 294733)) (* x8 (/ 285133 294733)) (* x9 (/ 3168 5561)) (* x10 (/ 98766 294733)) (* x11 (/ 245928 294733)) (* x12 (/ 68504 294733)) (* x13 (/ 234571 294733)))) ?def111)))
(let ((?def113 (and ?def112 ?def110)))
(let ((?def114 (= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268)) (* (/ (- 250000) 16817) ite5189_1)))))
(let ((?def115 (not (<= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268)))))))
(let ((?def116 (or ?def115 ?def114)))
(let ((?def117 (= 0 ite5189_1)))
(let ((?def118 (or (<= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268)))) ?def117)))
(let ((?def119 (and ?def118 ?def116)))
(let ((?def120 (= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780)) (* (/ (- 50000) 9989) ite5458_1)))))
(let ((?def121 (not (<= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780)))))))
(let ((?def122 (or ?def121 ?def120)))
(let ((?def123 (= 0 ite5458_1)))
(let ((?def124 (or (<= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780)))) ?def123)))
(let ((?def125 (and ?def124 ?def122)))
(let ((?def126 (= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297)) (* (/ (- 1000000) 150297) ite5727_1)))))
(let ((?def127 (not (<= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297)))))))
(let ((?def128 (or ?def127 ?def126)))
(let ((?def129 (= 0 ite5727_1)))
(let ((?def130 (or (<= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297)))) ?def129)))
(let ((?def131 (and ?def130 ?def128)))
(let ((?def132 (= 0 (+ x1 (* x2 (/ (- 49416) 749)) (* x3 (/ (- 39205) 107)) (* x4 (/ (- 195704) 749)) (* x5 (/ 183468 749)) (* x6 (/ 127153 749)) (* x7 (/ (- 134502) 749)) (* x8 (/ 44718 749)) (* x9 (/ (- 255912) 749)) (* x10 (/ (- 94081) 749)) (* x11 (/ (- 302348) 749)) (* x12 (/ (- 126104) 749)) (* x13 (/ 132204 749)) (* (/ 1000000 749) ite5973_1)))))
(let ((?def133 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 49416 749)) (* x3 (/ 39205 107)) (* x4 (/ 195704 749)) (* x5 (/ (- 183468) 749)) (* x6 (/ (- 127153) 749)) (* x7 (/ 134502 749)) (* x8 (/ (- 44718) 749)) (* x9 (/ 255912 749)) (* x10 (/ 94081 749)) (* x11 (/ 302348 749)) (* x12 (/ 126104 749)) (* x13 (/ (- 132204) 749)))))))
(let ((?def134 (or ?def133 ?def132)))
(let ((?def135 (= 0 ite5973_1)))
(let ((?def136 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 49416 749)) (* x3 (/ 39205 107)) (* x4 (/ 195704 749)) (* x5 (/ (- 183468) 749)) (* x6 (/ (- 127153) 749)) (* x7 (/ 134502 749)) (* x8 (/ (- 44718) 749)) (* x9 (/ 255912 749)) (* x10 (/ 94081 749)) (* x11 (/ 302348 749)) (* x12 (/ 126104 749)) (* x13 (/ (- 132204) 749)))) ?def135)))
(let ((?def137 (and ?def136 ?def134)))
(let ((?def138 (= (/ (- 3200) 134401) (+ x1 (* x2 (/ 2963 134401)) (* x3 (/ (- 360015) 134401)) (* x4 (/ 215935 134401)) (* x5 (/ (- 148016) 134401)) (* x6 (/ (- 265846) 134401)) (* x7 (/ (- 183746) 134401)) (* x8 (/ (- 212518) 134401)) (* x9 (/ (- 69936) 134401)) (* x10 (/ 455806 134401)) (* x11 (/ (- 288942) 134401)) (* x12 (/ 226116 134401)) (* x13 (/ 108753 134401)) (* (/ 1000000 134401) ite6242_1)))))
(let ((?def139 (not (<= (/ 3200 134401) (+ (* (- 1) x1) (* x2 (/ (- 2963) 134401)) (* x3 (/ 360015 134401)) (* x4 (/ (- 215935) 134401)) (* x5 (/ 148016 134401)) (* x6 (/ 265846 134401)) (* x7 (/ 183746 134401)) (* x8 (/ 212518 134401)) (* x9 (/ 69936 134401)) (* x10 (/ (- 455806) 134401)) (* x11 (/ 288942 134401)) (* x12 (/ (- 226116) 134401)) (* x13 (/ (- 108753) 134401)))))))
(let ((?def140 (or ?def139 ?def138)))
(let ((?def141 (= 0 ite6242_1)))
(let ((?def142 (or (<= (/ 3200 134401) (+ (* (- 1) x1) (* x2 (/ (- 2963) 134401)) (* x3 (/ 360015 134401)) (* x4 (/ (- 215935) 134401)) (* x5 (/ 148016 134401)) (* x6 (/ 265846 134401)) (* x7 (/ 183746 134401)) (* x8 (/ 212518 134401)) (* x9 (/ 69936 134401)) (* x10 (/ (- 455806) 134401)) (* x11 (/ 288942 134401)) (* x12 (/ (- 226116) 134401)) (* x13 (/ (- 108753) 134401)))) ?def141)))
(let ((?def143 (and ?def142 ?def140)))
(let ((?def144 (= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534)) (* (/ (- 125000) 11403) ite6511_1)))))
(let ((?def145 (not (<= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534)))))))
(let ((?def146 (or ?def145 ?def144)))
(let ((?def147 (= 0 ite6511_1)))
(let ((?def148 (or (<= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534)))) ?def147)))
(let ((?def149 (and ?def148 ?def146)))
(let ((?def150 (= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501)) (* (/ (- 1000000) 256503) ite6780_1)))))
(let ((?def151 (not (<= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501)))))))
(let ((?def152 (or ?def151 ?def150)))
(let ((?def153 (= 0 ite6780_1)))
(let ((?def154 (or (<= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501)))) ?def153)))
(let ((?def155 (and ?def154 ?def152)))
(let ((?def156 (= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557)) (* (/ (- 500000) 138557) ite7049_1)))))
(let ((?def157 (not (<= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557)))))))
(let ((?def158 (or ?def157 ?def156)))
(let ((?def159 (= 0 ite7049_1)))
(let ((?def160 (or (<= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557)))) ?def159)))
(let ((?def161 (and ?def160 ?def158)))
(let ((?def162 (= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899)) (* (/ (- 1000000) 178899) ite7318_1)))))
(let ((?def163 (not (<= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899)))))))
(let ((?def164 (or ?def163 ?def162)))
(let ((?def165 (= 0 ite7318_1)))
(let ((?def166 (or (<= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899)))) ?def165)))
(let ((?def167 (and ?def166 ?def164)))
(let ((?def168 (= (/ (- 6281) 45095) (+ x1 (* x2 (/ (- 67063) 225475)) (* x3 (/ 327942 225475)) (* x4 (/ (- 231397) 225475)) (* x5 (/ (- 217883) 225475)) (* x6 (/ 231048 225475)) (* x7 (/ (- 10249) 45095)) (* x8 (/ 335958 225475)) (* x9 (/ (- 194316) 225475)) (* x10 (/ 167059 225475)) (* x11 (/ 35673 45095)) (* x12 (/ 81013 225475)) (* x13 (/ 38281 45095)) (* (/ 40000 9019) ite7587_1)))))
(let ((?def169 (not (<= (/ 6281 45095) (+ (* (- 1) x1) (* x2 (/ 67063 225475)) (* x3 (/ (- 327942) 225475)) (* x4 (/ 231397 225475)) (* x5 (/ 217883 225475)) (* x6 (/ (- 231048) 225475)) (* x7 (/ 10249 45095)) (* x8 (/ (- 335958) 225475)) (* x9 (/ 194316 225475)) (* x10 (/ (- 167059) 225475)) (* x11 (/ (- 35673) 45095)) (* x12 (/ (- 81013) 225475)) (* x13 (/ (- 38281) 45095)))))))
(let ((?def170 (or ?def169 ?def168)))
(let ((?def171 (= 0 ite7587_1)))
(let ((?def172 (or (<= (/ 6281 45095) (+ (* (- 1) x1) (* x2 (/ 67063 225475)) (* x3 (/ (- 327942) 225475)) (* x4 (/ 231397 225475)) (* x5 (/ 217883 225475)) (* x6 (/ (- 231048) 225475)) (* x7 (/ 10249 45095)) (* x8 (/ (- 335958) 225475)) (* x9 (/ 194316 225475)) (* x10 (/ (- 167059) 225475)) (* x11 (/ (- 35673) 45095)) (* x12 (/ (- 81013) 225475)) (* x13 (/ (- 38281) 45095)))) ?def171)))
(let ((?def173 (and ?def172 ?def170)))
(let ((?def174 (= (/ 829 81015) (+ x1 (* x2 (/ (- 465163) 162030)) (* x3 (/ 34187 162030)) (* x4 (/ 40809 27005)) (* x5 (/ (- 50107) 27005)) (* x6 (/ 12521 81015)) (* x7 (/ (- 7211) 10802)) (* x8 (/ (- 53863) 162030)) (* x9 (/ (- 246067) 162030)) (* x10 (/ 34273 54010)) (* x11 (/ 107143 81015)) (* x12 (/ (- 427799) 162030)) (* x13 (/ (- 29481) 27005)) (* (/ 100000 16203) ite7856_1)))))
(let ((?def175 (not (<= (/ (- 829) 81015) (+ (* (- 1) x1) (* x2 (/ 465163 162030)) (* x3 (/ (- 34187) 162030)) (* x4 (/ (- 40809) 27005)) (* x5 (/ 50107 27005)) (* x6 (/ (- 12521) 81015)) (* x7 (/ 7211 10802)) (* x8 (/ 53863 162030)) (* x9 (/ 246067 162030)) (* x10 (/ (- 34273) 54010)) (* x11 (/ (- 107143) 81015)) (* x12 (/ 427799 162030)) (* x13 (/ 29481 27005)))))))
(let ((?def176 (or ?def175 ?def174)))
(let ((?def177 (= 0 ite7856_1)))
(let ((?def178 (or (<= (/ (- 829) 81015) (+ (* (- 1) x1) (* x2 (/ 465163 162030)) (* x3 (/ (- 34187) 162030)) (* x4 (/ (- 40809) 27005)) (* x5 (/ 50107 27005)) (* x6 (/ (- 12521) 81015)) (* x7 (/ 7211 10802)) (* x8 (/ 53863 162030)) (* x9 (/ 246067 162030)) (* x10 (/ (- 34273) 54010)) (* x11 (/ (- 107143) 81015)) (* x12 (/ 427799 162030)) (* x13 (/ 29481 27005)))) ?def177)))
(let ((?def179 (and ?def178 ?def176)))
(let ((?def180 (= (/ 120 63853) (+ x1 (* x2 (/ (- 65655) 127706)) (* x3 (/ (- 206537) 127706)) (* x4 (/ 32315 63853)) (* x5 (/ 66027 63853)) (* x6 (/ 96083 63853)) (* x7 (/ (- 126523) 127706)) (* x8 (/ (- 133437) 63853)) (* x9 (/ (- 74502) 63853)) (* x10 (/ 86525 127706)) (* x11 (/ (- 166569) 127706)) (* x12 (/ (- 40032) 63853)) (* x13 (/ 306129 127706)) (* (/ 500000 63853) ite8125_1)))))
(let ((?def181 (not (<= (/ (- 120) 63853) (+ (* (- 1) x1) (* x2 (/ 65655 127706)) (* x3 (/ 206537 127706)) (* x4 (/ (- 32315) 63853)) (* x5 (/ (- 66027) 63853)) (* x6 (/ (- 96083) 63853)) (* x7 (/ 126523 127706)) (* x8 (/ 133437 63853)) (* x9 (/ 74502 63853)) (* x10 (/ (- 86525) 127706)) (* x11 (/ 166569 127706)) (* x12 (/ 40032 63853)) (* x13 (/ (- 306129) 127706)))))))
(let ((?def182 (or ?def181 ?def180)))
(let ((?def183 (= 0 ite8125_1)))
(let ((?def184 (or (<= (/ (- 120) 63853) (+ (* (- 1) x1) (* x2 (/ 65655 127706)) (* x3 (/ 206537 127706)) (* x4 (/ (- 32315) 63853)) (* x5 (/ (- 66027) 63853)) (* x6 (/ (- 96083) 63853)) (* x7 (/ 126523 127706)) (* x8 (/ 133437 63853)) (* x9 (/ 74502 63853)) (* x10 (/ (- 86525) 127706)) (* x11 (/ 166569 127706)) (* x12 (/ 40032 63853)) (* x13 (/ (- 306129) 127706)))) ?def183)))
(let ((?def185 (and ?def184 ?def182)))
(let ((?def186 (= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741)) (* (/ (- 1000000) 182223) ite8394_1)))))
(let ((?def187 (not (<= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741)))))))
(let ((?def188 (or ?def187 ?def186)))
(let ((?def189 (= 0 ite8394_1)))
(let ((?def190 (or (<= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741)))) ?def189)))
(let ((?def191 (and ?def190 ?def188)))
(let ((?def192 (= 0 (+ x1 (* x2 (/ 122504 27845)) (* x3 (/ (- 238039) 55690)) (* x4 (/ 36117 55690)) (* x5 (/ 48611 55690)) (* x6 (/ 16573 11138)) (* x7 (/ (- 103301) 27845)) (* x8 (/ 46309 11138)) (* x9 (/ 109067 55690)) (* x10 (/ (- 267083) 55690)) (* x11 (/ (- 49424) 27845)) (* x12 (/ 36449 11138)) (* x13 (/ (- 36731) 11138)) (* (/ 100000 5569) ite8640_1)))))
(let ((?def193 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 122504) 27845)) (* x3 (/ 238039 55690)) (* x4 (/ (- 36117) 55690)) (* x5 (/ (- 48611) 55690)) (* x6 (/ (- 16573) 11138)) (* x7 (/ 103301 27845)) (* x8 (/ (- 46309) 11138)) (* x9 (/ (- 109067) 55690)) (* x10 (/ 267083 55690)) (* x11 (/ 49424 27845)) (* x12 (/ (- 36449) 11138)) (* x13 (/ 36731 11138)))))))
(let ((?def194 (or ?def193 ?def192)))
(let ((?def195 (= 0 ite8640_1)))
(let ((?def196 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 122504) 27845)) (* x3 (/ 238039 55690)) (* x4 (/ (- 36117) 55690)) (* x5 (/ (- 48611) 55690)) (* x6 (/ (- 16573) 11138)) (* x7 (/ 103301 27845)) (* x8 (/ (- 46309) 11138)) (* x9 (/ (- 109067) 55690)) (* x10 (/ 267083 55690)) (* x11 (/ 49424 27845)) (* x12 (/ (- 36449) 11138)) (* x13 (/ 36731 11138)))) ?def195)))
(let ((?def197 (and ?def196 ?def194)))
(let ((?def198 (= (/ (- 3064) 211155) (+ x1 (* x2 (/ (- 22567) 211155)) (* x3 (/ (- 147184) 211155)) (* x4 (/ 1198 42231)) (* x5 (/ (- 14108) 10055)) (* x6 (/ (- 106842) 70385)) (* x7 (/ (- 84716) 211155)) (* x8 (/ 96401 211155)) (* x9 (/ 3671 211155)) (* x10 (/ 13537 70385)) (* x11 (/ (- 221801) 211155)) (* x12 (/ 26081 211155)) (* x13 (/ 26210 42231)) (* (/ 200000 42231) ite8909_1)))))
(let ((?def199 (not (<= (/ 3064 211155) (+ (* (- 1) x1) (* x2 (/ 22567 211155)) (* x3 (/ 147184 211155)) (* x4 (/ (- 1198) 42231)) (* x5 (/ 14108 10055)) (* x6 (/ 106842 70385)) (* x7 (/ 84716 211155)) (* x8 (/ (- 96401) 211155)) (* x9 (/ (- 3671) 211155)) (* x10 (/ (- 13537) 70385)) (* x11 (/ 221801 211155)) (* x12 (/ (- 26081) 211155)) (* x13 (/ (- 26210) 42231)))))))
(let ((?def200 (or ?def199 ?def198)))
(let ((?def201 (= 0 ite8909_1)))
(let ((?def202 (or (<= (/ 3064 211155) (+ (* (- 1) x1) (* x2 (/ 22567 211155)) (* x3 (/ 147184 211155)) (* x4 (/ (- 1198) 42231)) (* x5 (/ 14108 10055)) (* x6 (/ 106842 70385)) (* x7 (/ 84716 211155)) (* x8 (/ (- 96401) 211155)) (* x9 (/ (- 3671) 211155)) (* x10 (/ (- 13537) 70385)) (* x11 (/ 221801 211155)) (* x12 (/ (- 26081) 211155)) (* x13 (/ (- 26210) 42231)))) ?def201)))
(let ((?def203 (and ?def202 ?def200)))
(let ((?def204 (= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140)) (* (/ (- 50000) 9407) ite9178_1)))))
(let ((?def205 (not (<= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140)))))))
(let ((?def206 (or ?def205 ?def204)))
(let ((?def207 (= 0 ite9178_1)))
(let ((?def208 (or (<= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140)))) ?def207)))
(let ((?def209 (and ?def208 ?def206)))
(let ((?def210 (= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196)) (* (/ (- 250000) 8049) ite9447_1)))))
(let ((?def211 (not (<= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196)))))))
(let ((?def212 (or ?def211 ?def210)))
(let ((?def213 (= 0 ite9447_1)))
(let ((?def214 (or (<= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196)))) ?def213)))
(let ((?def215 (and ?def214 ?def212)))
(let ((?def216 (= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191)) (* (/ (- 1000000) 233191) ite9716_1)))))
(let ((?def217 (not (<= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191)))))))
(let ((?def218 (or ?def217 ?def216)))
(let ((?def219 (= 0 ite9716_1)))
(let ((?def220 (or (<= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191)))) ?def219)))
(let ((?def221 (and ?def220 ?def218)))
(let ((?def222 (= (/ (- 24277) 211322) (+ x1 (* x2 (/ 104083 105661)) (* x3 (/ 39937 105661)) (* x4 (/ 84759 211322)) (* x5 (/ (- 47243) 105661)) (* x6 (/ 119601 211322)) (* x7 (/ 20695 105661)) (* x8 (/ 39143 211322)) (* x9 (/ (- 19305) 211322)) (* x10 (/ (- 77607) 105661)) (* x11 (/ (- 179677) 211322)) (* x12 (/ 130831 105661)) (* x13 (/ 9516 105661)) (* (/ 500000 105661) ite9985_1)))))
(let ((?def223 (not (<= (/ 24277 211322) (+ (* (- 1) x1) (* x2 (/ (- 104083) 105661)) (* x3 (/ (- 39937) 105661)) (* x4 (/ (- 84759) 211322)) (* x5 (/ 47243 105661)) (* x6 (/ (- 119601) 211322)) (* x7 (/ (- 20695) 105661)) (* x8 (/ (- 39143) 211322)) (* x9 (/ 19305 211322)) (* x10 (/ 77607 105661)) (* x11 (/ 179677 211322)) (* x12 (/ (- 130831) 105661)) (* x13 (/ (- 9516) 105661)))))))
(let ((?def224 (or ?def223 ?def222)))
(let ((?def225 (= 0 ite9985_1)))
(let ((?def226 (or (<= (/ 24277 211322) (+ (* (- 1) x1) (* x2 (/ (- 104083) 105661)) (* x3 (/ (- 39937) 105661)) (* x4 (/ (- 84759) 211322)) (* x5 (/ 47243 105661)) (* x6 (/ (- 119601) 211322)) (* x7 (/ (- 20695) 105661)) (* x8 (/ (- 39143) 211322)) (* x9 (/ 19305 211322)) (* x10 (/ 77607 105661)) (* x11 (/ 179677 211322)) (* x12 (/ (- 130831) 105661)) (* x13 (/ (- 9516) 105661)))) ?def225)))
(let ((?def227 (and ?def226 ?def224)))
(let ((?def228 (= (/ (- 34678) 199195) (+ x1 (* x2 (/ 138126 199195)) (* x3 (/ 134956 199195)) (* x4 (/ 305424 199195)) (* x5 (/ (- 207817) 199195)) (* x6 (/ (- 129783) 199195)) (* x7 (/ 52510 39839)) (* x8 (/ 51349 199195)) (* x9 (/ 382077 199195)) (* x10 (/ (- 17452) 39839)) (* x11 (/ 150407 199195)) (* x12 (/ (- 203427) 199195)) (* x13 (/ (- 29003) 39839)) (* (/ 200000 39839) ite10254_1)))))
(let ((?def229 (not (<= (/ 34678 199195) (+ (* (- 1) x1) (* x2 (/ (- 138126) 199195)) (* x3 (/ (- 134956) 199195)) (* x4 (/ (- 305424) 199195)) (* x5 (/ 207817 199195)) (* x6 (/ 129783 199195)) (* x7 (/ (- 52510) 39839)) (* x8 (/ (- 51349) 199195)) (* x9 (/ (- 382077) 199195)) (* x10 (/ 17452 39839)) (* x11 (/ (- 150407) 199195)) (* x12 (/ 203427 199195)) (* x13 (/ 29003 39839)))))))
(let ((?def230 (or ?def229 ?def228)))
(let ((?def231 (= 0 ite10254_1)))
(let ((?def232 (or (<= (/ 34678 199195) (+ (* (- 1) x1) (* x2 (/ (- 138126) 199195)) (* x3 (/ (- 134956) 199195)) (* x4 (/ (- 305424) 199195)) (* x5 (/ 207817 199195)) (* x6 (/ 129783 199195)) (* x7 (/ (- 52510) 39839)) (* x8 (/ (- 51349) 199195)) (* x9 (/ (- 382077) 199195)) (* x10 (/ 17452 39839)) (* x11 (/ (- 150407) 199195)) (* x12 (/ 203427 199195)) (* x13 (/ 29003 39839)))) ?def231)))
(let ((?def233 (and ?def232 ?def230)))
(let ((?def234 (= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003)) (* (/ (- 1000000) 131003) ite10523_1)))))
(let ((?def235 (not (<= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003)))))))
(let ((?def236 (or ?def235 ?def234)))
(let ((?def237 (= 0 ite10523_1)))
(let ((?def238 (or (<= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003)))) ?def237)))
(let ((?def239 (and ?def238 ?def236)))
(let ((?def240 (= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994)) (* (/ (- 500000) 49997) ite10769_1)))))
(let ((?def241 (not (<= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994)))))))
(let ((?def242 (or ?def241 ?def240)))
(let ((?def243 (= 0 ite10769_1)))
(let ((?def244 (or (<= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994)))) ?def243)))
(let ((?def245 (and ?def244 ?def242)))
(let ((?def246 (= 0 (+ x1 (* x2 (/ 20609 18577)) (* x3 (/ 42287 37154)) (* x4 (/ 153271 37154)) (* x5 (/ 52837 37154)) (* x6 (/ (- 63632) 18577)) (* x7 (/ (- 73947) 74308)) (* x8 (/ 67242 18577)) (* x9 (/ (- 102509) 37154)) (* x10 (/ 11979 37154)) (* x11 (/ 56869 37154)) (* x12 (/ (- 57625) 37154)) (* x13 (/ 253059 74308)) (* (/ 250000 18577) ite11015_1)))))
(let ((?def247 (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 20609) 18577)) (* x3 (/ (- 42287) 37154)) (* x4 (/ (- 153271) 37154)) (* x5 (/ (- 52837) 37154)) (* x6 (/ 63632 18577)) (* x7 (/ 73947 74308)) (* x8 (/ (- 67242) 18577)) (* x9 (/ 102509 37154)) (* x10 (/ (- 11979) 37154)) (* x11 (/ (- 56869) 37154)) (* x12 (/ 57625 37154)) (* x13 (/ (- 253059) 74308)))))))
(let ((?def248 (or ?def247 ?def246)))
(let ((?def249 (= 0 ite11015_1)))
(let ((?def250 (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 20609) 18577)) (* x3 (/ (- 42287) 37154)) (* x4 (/ (- 153271) 37154)) (* x5 (/ (- 52837) 37154)) (* x6 (/ 63632 18577)) (* x7 (/ 73947 74308)) (* x8 (/ (- 67242) 18577)) (* x9 (/ 102509 37154)) (* x10 (/ (- 11979) 37154)) (* x11 (/ (- 56869) 37154)) (* x12 (/ 57625 37154)) (* x13 (/ (- 253059) 74308)))) ?def249)))
(let ((?def251 (and ?def250 ?def248)))
(let ((?def252 (= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527)) (* (/ (- 500000) 102527) ite11284_1)))))
(let ((?def253 (not (<= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527)))))))
(let ((?def254 (or ?def253 ?def252)))
(let ((?def255 (= 0 ite11284_1)))
(let ((?def256 (or (<= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527)))) ?def255)))
(let ((?def257 (and ?def256 ?def254)))
(let ((?def258 (= (/ (- 3755) 24363) (+ x1 (* x2 (/ 99179 8121)) (* x3 (/ 20089 24363)) (* x4 (/ (- 78485) 8121)) (* x5 (/ (- 55183) 8121)) (* x6 (/ (- 64735) 8121)) (* x7 (/ (- 357062) 24363)) (* x8 (/ (- 246484) 24363)) (* x9 (/ 117043 8121)) (* x10 (/ 204638 24363)) (* x11 (/ (- 120556) 8121)) (* x12 (/ 325712 24363)) (* x13 (/ (- 12787) 2707)) (* (/ 1000000 24363) ite11553_1)))))
(let ((?def259 (not (<= (/ 3755 24363) (+ (* (- 1) x1) (* x2 (/ (- 99179) 8121)) (* x3 (/ (- 20089) 24363)) (* x4 (/ 78485 8121)) (* x5 (/ 55183 8121)) (* x6 (/ 64735 8121)) (* x7 (/ 357062 24363)) (* x8 (/ 246484 24363)) (* x9 (/ (- 117043) 8121)) (* x10 (/ (- 204638) 24363)) (* x11 (/ 120556 8121)) (* x12 (/ (- 325712) 24363)) (* x13 (/ 12787 2707)))))))
(let ((?def260 (or ?def259 ?def258)))
(let ((?def261 (= 0 ite11553_1)))
(let ((?def262 (or (<= (/ 3755 24363) (+ (* (- 1) x1) (* x2 (/ (- 99179) 8121)) (* x3 (/ (- 20089) 24363)) (* x4 (/ 78485 8121)) (* x5 (/ 55183 8121)) (* x6 (/ 64735 8121)) (* x7 (/ 357062 24363)) (* x8 (/ 246484 24363)) (* x9 (/ (- 117043) 8121)) (* x10 (/ (- 204638) 24363)) (* x11 (/ 120556 8121)) (* x12 (/ (- 325712) 24363)) (* x13 (/ 12787 2707)))) ?def261)))
(let ((?def263 (and ?def262 ?def260)))
(let ((?def264 (= (/ 4247 192830) (+ x1 (* x2 (/ (- 25360) 19283)) (* x3 (/ 36999 19283)) (* x4 (/ (- 155699) 192830)) (* x5 (/ 37579 96415)) (* x6 (/ (- 76169) 192830)) (* x7 (/ 26338 19283)) (* x8 (/ (- 119193) 192830)) (* x9 (/ (- 176428) 96415)) (* x10 (/ (- 303139) 192830)) (* x11 (/ (- 125391) 96415)) (* x12 (/ (- 255753) 192830)) (* x13 (/ (- 131686) 96415)) (* (/ 100000 19283) ite11822_1)))))
(let ((?def265 (not (<= (/ (- 4247) 192830) (+ (* (- 1) x1) (* x2 (/ 25360 19283)) (* x3 (/ (- 36999) 19283)) (* x4 (/ 155699 192830)) (* x5 (/ (- 37579) 96415)) (* x6 (/ 76169 192830)) (* x7 (/ (- 26338) 19283)) (* x8 (/ 119193 192830)) (* x9 (/ 176428 96415)) (* x10 (/ 303139 192830)) (* x11 (/ 125391 96415)) (* x12 (/ 255753 192830)) (* x13 (/ 131686 96415)))))))
(let ((?def266 (or ?def265 ?def264)))
(let ((?def267 (= 0 ite11822_1)))
(let ((?def268 (or (<= (/ (- 4247) 192830) (+ (* (- 1) x1) (* x2 (/ 25360 19283)) (* x3 (/ (- 36999) 19283)) (* x4 (/ 155699 192830)) (* x5 (/ (- 37579) 96415)) (* x6 (/ 76169 192830)) (* x7 (/ (- 26338) 19283)) (* x8 (/ 119193 192830)) (* x9 (/ 176428 96415)) (* x10 (/ 303139 192830)) (* x11 (/ 125391 96415)) (* x12 (/ 255753 192830)) (* x13 (/ 131686 96415)))) ?def267)))
(let ((?def269 (and ?def268 ?def266)))
(let ((?def270 (= (/ (- 5518) 20375) (+ x1 (* x2 (/ (- 77996) 61125)) (* x3 (/ 79319 61125)) (* x4 (/ 8782 61125)) (* x5 (/ (- 63454) 20375)) (* x6 (/ 34441 20375)) (* x7 (/ (- 31231) 12225)) (* x8 (/ (- 56318) 61125)) (* x9 (/ 19377 20375)) (* x10 (/ 355166 61125)) (* x11 (/ 113452 61125)) (* x12 (/ 21102 4075)) (* x13 (/ 265159 61125)) (* (/ 8000 489) ite12091_1)))))
(let ((?def271 (not (<= (/ 5518 20375) (+ (* (- 1) x1) (* x2 (/ 77996 61125)) (* x3 (/ (- 79319) 61125)) (* x4 (/ (- 8782) 61125)) (* x5 (/ 63454 20375)) (* x6 (/ (- 34441) 20375)) (* x7 (/ 31231 12225)) (* x8 (/ 56318 61125)) (* x9 (/ (- 19377) 20375)) (* x10 (/ (- 355166) 61125)) (* x11 (/ (- 113452) 61125)) (* x12 (/ (- 21102) 4075)) (* x13 (/ (- 265159) 61125)))))))
(let ((?def272 (or ?def271 ?def270)))
(let ((?def273 (= 0 ite12091_1)))
(let ((?def274 (or (<= (/ 5518 20375) (+ (* (- 1) x1) (* x2 (/ 77996 61125)) (* x3 (/ (- 79319) 61125)) (* x4 (/ (- 8782) 61125)) (* x5 (/ 63454 20375)) (* x6 (/ (- 34441) 20375)) (* x7 (/ 31231 12225)) (* x8 (/ 56318 61125)) (* x9 (/ (- 19377) 20375)) (* x10 (/ (- 355166) 61125)) (* x11 (/ (- 113452) 61125)) (* x12 (/ (- 21102) 4075)) (* x13 (/ (- 265159) 61125)))) ?def273)))
(let ((?def275 (and ?def274 ?def272)))
(let ((?def276 (= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384)) (* (/ (- 62500) 673) ite12337_1)))))
(let ((?def277 (not (<= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384)))))))
(let ((?def278 (or ?def277 ?def276)))
(let ((?def279 (= 0 ite12337_1)))
(let ((?def280 (or (<= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384)))) ?def279)))
(let ((?def281 (and ?def280 ?def278)))
(let ((?def282 (= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654)) (* (/ (- 500000) 21827) ite12606_1)))))
(let ((?def283 (not (<= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654)))))))
(let ((?def284 (or ?def283 ?def282)))
(let ((?def285 (= 0 ite12606_1)))
(let ((?def286 (or (<= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654)))) ?def285)))
(let ((?def287 (and ?def286 ?def284)))
(let ((?def288 (= (/ 16238 19865) (+ x1 (* x2 (/ 344911 19865)) (* x3 (/ (- 279012) 19865)) (* x4 (/ (- 21827) 19865)) (* x5 (/ 126524 19865)) (* x6 (/ 23949 3973)) (* x7 (/ 16656 3973)) (* x8 (/ (- 225647) 19865)) (* x9 (/ 498016 19865)) (* x10 (/ 264228 19865)) (* x11 (/ (- 323041) 19865)) (* x12 (/ (- 1888) 685)) (* x13 (/ (- 209267) 19865)) (* (/ 200000 3973) ite12875_1)))))
(let ((?def289 (not (<= (/ (- 16238) 19865) (+ (* (- 1) x1) (* x2 (/ (- 344911) 19865)) (* x3 (/ 279012 19865)) (* x4 (/ 21827 19865)) (* x5 (/ (- 126524) 19865)) (* x6 (/ (- 23949) 3973)) (* x7 (/ (- 16656) 3973)) (* x8 (/ 225647 19865)) (* x9 (/ (- 498016) 19865)) (* x10 (/ (- 264228) 19865)) (* x11 (/ 323041 19865)) (* x12 (/ 1888 685)) (* x13 (/ 209267 19865)))))))
(let ((?def290 (or ?def289 ?def288)))
(let ((?def291 (= 0 ite12875_1)))
(let ((?def292 (or (<= (/ (- 16238) 19865) (+ (* (- 1) x1) (* x2 (/ (- 344911) 19865)) (* x3 (/ 279012 19865)) (* x4 (/ 21827 19865)) (* x5 (/ (- 126524) 19865)) (* x6 (/ (- 23949) 3973)) (* x7 (/ (- 16656) 3973)) (* x8 (/ 225647 19865)) (* x9 (/ (- 498016) 19865)) (* x10 (/ (- 264228) 19865)) (* x11 (/ 323041 19865)) (* x12 (/ 1888 685)) (* x13 (/ 209267 19865)))) ?def291)))
(let ((?def293 (and ?def292 ?def290)))
(let ((?def294 (= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883)) (* (/ (- 1000000) 186883) ite13121_1)))))
(let ((?def295 (not (<= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883)))))))
(let ((?def296 (or ?def295 ?def294)))
(let ((?def297 (= 0 ite13121_1)))
(let ((?def298 (or (<= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883)))) ?def297)))
(let ((?def299 (and ?def298 ?def296)))
(let ((?def300 (and ?def299 ?def293 ?def287 ?def281 ?def275 ?def269 ?def263 ?def257 ?def251 ?def245 ?def239 ?def233 ?def227 ?def221 ?def215 ?def209 ?def203 ?def197 ?def191 ?def185 ?def179 ?def173 ?def167 ?def161 ?def155 ?def149 ?def143 ?def137 ?def131 ?def125 ?def119 ?def113 ?def107 ?def101 ?def95 ?def89 ?def83 ?def77 ?def71 ?def65 ?def59 ?def53 ?def47 ?def41 ?def35 ?def29 ?def23 ?def17 ?def11 ?def5)))
(let ((?def301 (and (<= (/ 433 6935) (+ (* (- 1) ite303_1) (* (/ 659 5475) ite554_1) (* (/ (- 59827) 104025) ite800_1) (* (/ 28049 34675) ite1046_1) (* (/ (- 250213) 208050) ite1315_1) (* (/ 65443 104025) ite1584_1) (* (/ 8381 34675) ite1853_1) (* (/ (- 22102) 34675) ite2099_1) (* (/ (- 30857) 41610) ite2345_1) (* (/ 26367 34675) ite2591_1) (* (/ 59179 41610) ite2860_1) (* (/ (- 288343) 208050) ite3106_1) (* (/ (- 39503) 104025) ite3375_1) (* (/ (- 65123) 41610) ite3621_1) (* (/ 281539 208050) ite3890_1) (* (/ (- 6526) 4161) ite4136_1) (* (/ 155777 208050) ite4405_1) (* (/ 96557 104025) ite4651_1) (* (/ 149239 104025) ite4920_1) (* (/ 30043 208050) ite5189_1) (* (/ 94331 104025) ite5458_1) (* (/ (- 136577) 104025) ite5727_1) (* (/ (- 32951) 20805) ite5973_1) (* (/ (- 10871) 10950) ite6242_1) (* (/ (- 105357) 69350) ite6511_1) (* (/ 17307 13870) ite6780_1) (* (/ (- 12763) 69350) ite7049_1) (* (/ 249221 208050) ite7318_1) (* (/ (- 1399) 208050) ite7587_1) (* (/ 20641 34675) ite7856_1) (* (/ (- 63331) 41610) ite8125_1) (* (/ 165893 104025) ite8394_1) (* (/ 65981 208050) ite8640_1) (* (/ (- 136538) 104025) ite8909_1) (* (/ (- 11669) 8322) ite9178_1) (* (/ 31843 208050) ite9447_1) (* (/ 4468 4161) ite9716_1) (* (/ (- 1424) 1825) ite9985_1) (* (/ (- 8159) 6935) ite10254_1) (* (/ 71773 208050) ite10523_1) (* (/ (- 70396) 104025) ite10769_1) (* (/ 3029 6935) ite11015_1) (* (/ 301061 208050) ite11284_1) (* (/ (- 112843) 208050) ite11553_1) (* (/ 173507 208050) ite11822_1) (* (/ (- 2781) 69350) ite12091_1) (* (/ 1651 3650) ite12337_1) (* (/ 239507 208050) ite12606_1) (* (/ (- 108491) 104025) ite12875_1) (* (/ (- 141161) 104025) ite13121_1)))
 ?def300)))

(and
(not
(and
?defD
?def301
)
)

;; (not
(and
(and (<= 29 x1) (<= (- 77) (* (- 1) x1)) (<= 0 x2) (<= (- 1) (* (- 1) x2)) (<= 0 x3) (<= (- 3) (* (- 1) x3)) (<= 94 x4) (<= (- 200) (* (- 1) x4)) (<= 126 x5) (<= (- 594) (* (- 1) x5)) (<= 0 x6) (<= (- 1) (* (- 1) x6)) (<= 0 x7) (<= (- 2) (* (- 1) x7)) (<= 71 x8) (<= (- 202) (* (- 1) x8)) (<= 0 x9) (<= (- 1) (* (- 1) x9)) (<= 0 x10) (<= (/ (- 31) 5) (* (- 1) x10)) (<= 0 x11) (<= (- 2) (* (- 1) x11)) (<= 0 x12) (<= (- 4) (* (- 1) x12)) (<= 0 x13) (<= (- 3) (* (- 1) x13)))
;; (and (<= (/ 433 6935) (+ (* (- 1) ite303_1) (* (/ 659 5475) ite554_1) (* (/ (- 59827) 104025) ite800_1) (* (/ 28049 34675) ite1046_1) (* (/ (- 250213) 208050) ite1315_1) (* (/ 65443 104025) ite1584_1) (* (/ 8381 34675) ite1853_1) (* (/ (- 22102) 34675) ite2099_1) (* (/ (- 30857) 41610) ite2345_1) (* (/ 26367 34675) ite2591_1) (* (/ 59179 41610) ite2860_1) (* (/ (- 288343) 208050) ite3106_1) (* (/ (- 39503) 104025) ite3375_1) (* (/ (- 65123) 41610) ite3621_1) (* (/ 281539 208050) ite3890_1) (* (/ (- 6526) 4161) ite4136_1) (* (/ 155777 208050) ite4405_1) (* (/ 96557 104025) ite4651_1) (* (/ 149239 104025) ite4920_1) (* (/ 30043 208050) ite5189_1) (* (/ 94331 104025) ite5458_1) (* (/ (- 136577) 104025) ite5727_1) (* (/ (- 32951) 20805) ite5973_1) (* (/ (- 10871) 10950) ite6242_1) (* (/ (- 105357) 69350) ite6511_1) (* (/ 17307 13870) ite6780_1) (* (/ (- 12763) 69350) ite7049_1) (* (/ 249221 208050) ite7318_1) (* (/ (- 1399) 208050) ite7587_1) (* (/ 20641 34675) ite7856_1) (* (/ (- 63331) 41610) ite8125_1) (* (/ 165893 104025) ite8394_1) (* (/ 65981 208050) ite8640_1) (* (/ (- 136538) 104025) ite8909_1) (* (/ (- 11669) 8322) ite9178_1) (* (/ 31843 208050) ite9447_1) (* (/ 4468 4161) ite9716_1) (* (/ (- 1424) 1825) ite9985_1) (* (/ (- 8159) 6935) ite10254_1) (* (/ 71773 208050) ite10523_1) (* (/ (- 70396) 104025) ite10769_1) (* (/ 3029 6935) ite11015_1) (* (/ 301061 208050) ite11284_1) (* (/ (- 112843) 208050) ite11553_1) (* (/ 173507 208050) ite11822_1) (* (/ (- 2781) 69350) ite12091_1) (* (/ 1651 3650) ite12337_1) (* (/ 239507 208050) ite12606_1) (* (/ (- 108491) 104025) ite12875_1) (* (/ (- 141161) 104025) ite13121_1))) (and (and (or (<= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883)))) (= 0 ite13121_1)) (or (not (<= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883))))) (= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883)) (* (/ (- 1000000) 186883) ite13121_1))))) (and (or (<= (/ (- 16238) 19865) (+ (* (- 1) x1) (* x2 (/ (- 344911) 19865)) (* x3 (/ 279012 19865)) (* x4 (/ 21827 19865)) (* x5 (/ (- 126524) 19865)) (* x6 (/ (- 23949) 3973)) (* x7 (/ (- 16656) 3973)) (* x8 (/ 225647 19865)) (* x9 (/ (- 498016) 19865)) (* x10 (/ (- 264228) 19865)) (* x11 (/ 323041 19865)) (* x12 (/ 1888 685)) (* x13 (/ 209267 19865)))) (= 0 ite12875_1)) (or (not (<= (/ (- 16238) 19865) (+ (* (- 1) x1) (* x2 (/ (- 344911) 19865)) (* x3 (/ 279012 19865)) (* x4 (/ 21827 19865)) (* x5 (/ (- 126524) 19865)) (* x6 (/ (- 23949) 3973)) (* x7 (/ (- 16656) 3973)) (* x8 (/ 225647 19865)) (* x9 (/ (- 498016) 19865)) (* x10 (/ (- 264228) 19865)) (* x11 (/ 323041 19865)) (* x12 (/ 1888 685)) (* x13 (/ 209267 19865))))) (= (/ 16238 19865) (+ x1 (* x2 (/ 344911 19865)) (* x3 (/ (- 279012) 19865)) (* x4 (/ (- 21827) 19865)) (* x5 (/ 126524 19865)) (* x6 (/ 23949 3973)) (* x7 (/ 16656 3973)) (* x8 (/ (- 225647) 19865)) (* x9 (/ 498016 19865)) (* x10 (/ 264228 19865)) (* x11 (/ (- 323041) 19865)) (* x12 (/ (- 1888) 685)) (* x13 (/ (- 209267) 19865)) (* (/ 200000 3973) ite12875_1))))) (and (or (<= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654)))) (= 0 ite12606_1)) (or (not (<= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654))))) (= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654)) (* (/ (- 500000) 21827) ite12606_1))))) (and (or (<= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384)))) (= 0 ite12337_1)) (or (not (<= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384))))) (= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384)) (* (/ (- 62500) 673) ite12337_1))))) (and (or (<= (/ 5518 20375) (+ (* (- 1) x1) (* x2 (/ 77996 61125)) (* x3 (/ (- 79319) 61125)) (* x4 (/ (- 8782) 61125)) (* x5 (/ 63454 20375)) (* x6 (/ (- 34441) 20375)) (* x7 (/ 31231 12225)) (* x8 (/ 56318 61125)) (* x9 (/ (- 19377) 20375)) (* x10 (/ (- 355166) 61125)) (* x11 (/ (- 113452) 61125)) (* x12 (/ (- 21102) 4075)) (* x13 (/ (- 265159) 61125)))) (= 0 ite12091_1)) (or (not (<= (/ 5518 20375) (+ (* (- 1) x1) (* x2 (/ 77996 61125)) (* x3 (/ (- 79319) 61125)) (* x4 (/ (- 8782) 61125)) (* x5 (/ 63454 20375)) (* x6 (/ (- 34441) 20375)) (* x7 (/ 31231 12225)) (* x8 (/ 56318 61125)) (* x9 (/ (- 19377) 20375)) (* x10 (/ (- 355166) 61125)) (* x11 (/ (- 113452) 61125)) (* x12 (/ (- 21102) 4075)) (* x13 (/ (- 265159) 61125))))) (= (/ (- 5518) 20375) (+ x1 (* x2 (/ (- 77996) 61125)) (* x3 (/ 79319 61125)) (* x4 (/ 8782 61125)) (* x5 (/ (- 63454) 20375)) (* x6 (/ 34441 20375)) (* x7 (/ (- 31231) 12225)) (* x8 (/ (- 56318) 61125)) (* x9 (/ 19377 20375)) (* x10 (/ 355166 61125)) (* x11 (/ 113452 61125)) (* x12 (/ 21102 4075)) (* x13 (/ 265159 61125)) (* (/ 8000 489) ite12091_1))))) (and (or (<= (/ (- 4247) 192830) (+ (* (- 1) x1) (* x2 (/ 25360 19283)) (* x3 (/ (- 36999) 19283)) (* x4 (/ 155699 192830)) (* x5 (/ (- 37579) 96415)) (* x6 (/ 76169 192830)) (* x7 (/ (- 26338) 19283)) (* x8 (/ 119193 192830)) (* x9 (/ 176428 96415)) (* x10 (/ 303139 192830)) (* x11 (/ 125391 96415)) (* x12 (/ 255753 192830)) (* x13 (/ 131686 96415)))) (= 0 ite11822_1)) (or (not (<= (/ (- 4247) 192830) (+ (* (- 1) x1) (* x2 (/ 25360 19283)) (* x3 (/ (- 36999) 19283)) (* x4 (/ 155699 192830)) (* x5 (/ (- 37579) 96415)) (* x6 (/ 76169 192830)) (* x7 (/ (- 26338) 19283)) (* x8 (/ 119193 192830)) (* x9 (/ 176428 96415)) (* x10 (/ 303139 192830)) (* x11 (/ 125391 96415)) (* x12 (/ 255753 192830)) (* x13 (/ 131686 96415))))) (= (/ 4247 192830) (+ x1 (* x2 (/ (- 25360) 19283)) (* x3 (/ 36999 19283)) (* x4 (/ (- 155699) 192830)) (* x5 (/ 37579 96415)) (* x6 (/ (- 76169) 192830)) (* x7 (/ 26338 19283)) (* x8 (/ (- 119193) 192830)) (* x9 (/ (- 176428) 96415)) (* x10 (/ (- 303139) 192830)) (* x11 (/ (- 125391) 96415)) (* x12 (/ (- 255753) 192830)) (* x13 (/ (- 131686) 96415)) (* (/ 100000 19283) ite11822_1))))) (and (or (<= (/ 3755 24363) (+ (* (- 1) x1) (* x2 (/ (- 99179) 8121)) (* x3 (/ (- 20089) 24363)) (* x4 (/ 78485 8121)) (* x5 (/ 55183 8121)) (* x6 (/ 64735 8121)) (* x7 (/ 357062 24363)) (* x8 (/ 246484 24363)) (* x9 (/ (- 117043) 8121)) (* x10 (/ (- 204638) 24363)) (* x11 (/ 120556 8121)) (* x12 (/ (- 325712) 24363)) (* x13 (/ 12787 2707)))) (= 0 ite11553_1)) (or (not (<= (/ 3755 24363) (+ (* (- 1) x1) (* x2 (/ (- 99179) 8121)) (* x3 (/ (- 20089) 24363)) (* x4 (/ 78485 8121)) (* x5 (/ 55183 8121)) (* x6 (/ 64735 8121)) (* x7 (/ 357062 24363)) (* x8 (/ 246484 24363)) (* x9 (/ (- 117043) 8121)) (* x10 (/ (- 204638) 24363)) (* x11 (/ 120556 8121)) (* x12 (/ (- 325712) 24363)) (* x13 (/ 12787 2707))))) (= (/ (- 3755) 24363) (+ x1 (* x2 (/ 99179 8121)) (* x3 (/ 20089 24363)) (* x4 (/ (- 78485) 8121)) (* x5 (/ (- 55183) 8121)) (* x6 (/ (- 64735) 8121)) (* x7 (/ (- 357062) 24363)) (* x8 (/ (- 246484) 24363)) (* x9 (/ 117043 8121)) (* x10 (/ 204638 24363)) (* x11 (/ (- 120556) 8121)) (* x12 (/ 325712 24363)) (* x13 (/ (- 12787) 2707)) (* (/ 1000000 24363) ite11553_1))))) (and (or (<= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527)))) (= 0 ite11284_1)) (or (not (<= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527))))) (= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527)) (* (/ (- 500000) 102527) ite11284_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 20609) 18577)) (* x3 (/ (- 42287) 37154)) (* x4 (/ (- 153271) 37154)) (* x5 (/ (- 52837) 37154)) (* x6 (/ 63632 18577)) (* x7 (/ 73947 74308)) (* x8 (/ (- 67242) 18577)) (* x9 (/ 102509 37154)) (* x10 (/ (- 11979) 37154)) (* x11 (/ (- 56869) 37154)) (* x12 (/ 57625 37154)) (* x13 (/ (- 253059) 74308)))) (= 0 ite11015_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 20609) 18577)) (* x3 (/ (- 42287) 37154)) (* x4 (/ (- 153271) 37154)) (* x5 (/ (- 52837) 37154)) (* x6 (/ 63632 18577)) (* x7 (/ 73947 74308)) (* x8 (/ (- 67242) 18577)) (* x9 (/ 102509 37154)) (* x10 (/ (- 11979) 37154)) (* x11 (/ (- 56869) 37154)) (* x12 (/ 57625 37154)) (* x13 (/ (- 253059) 74308))))) (= 0 (+ x1 (* x2 (/ 20609 18577)) (* x3 (/ 42287 37154)) (* x4 (/ 153271 37154)) (* x5 (/ 52837 37154)) (* x6 (/ (- 63632) 18577)) (* x7 (/ (- 73947) 74308)) (* x8 (/ 67242 18577)) (* x9 (/ (- 102509) 37154)) (* x10 (/ 11979 37154)) (* x11 (/ 56869 37154)) (* x12 (/ (- 57625) 37154)) (* x13 (/ 253059 74308)) (* (/ 250000 18577) ite11015_1))))) (and (or (<= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994)))) (= 0 ite10769_1)) (or (not (<= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994))))) (= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994)) (* (/ (- 500000) 49997) ite10769_1))))) (and (or (<= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003)))) (= 0 ite10523_1)) (or (not (<= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003))))) (= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003)) (* (/ (- 1000000) 131003) ite10523_1))))) (and (or (<= (/ 34678 199195) (+ (* (- 1) x1) (* x2 (/ (- 138126) 199195)) (* x3 (/ (- 134956) 199195)) (* x4 (/ (- 305424) 199195)) (* x5 (/ 207817 199195)) (* x6 (/ 129783 199195)) (* x7 (/ (- 52510) 39839)) (* x8 (/ (- 51349) 199195)) (* x9 (/ (- 382077) 199195)) (* x10 (/ 17452 39839)) (* x11 (/ (- 150407) 199195)) (* x12 (/ 203427 199195)) (* x13 (/ 29003 39839)))) (= 0 ite10254_1)) (or (not (<= (/ 34678 199195) (+ (* (- 1) x1) (* x2 (/ (- 138126) 199195)) (* x3 (/ (- 134956) 199195)) (* x4 (/ (- 305424) 199195)) (* x5 (/ 207817 199195)) (* x6 (/ 129783 199195)) (* x7 (/ (- 52510) 39839)) (* x8 (/ (- 51349) 199195)) (* x9 (/ (- 382077) 199195)) (* x10 (/ 17452 39839)) (* x11 (/ (- 150407) 199195)) (* x12 (/ 203427 199195)) (* x13 (/ 29003 39839))))) (= (/ (- 34678) 199195) (+ x1 (* x2 (/ 138126 199195)) (* x3 (/ 134956 199195)) (* x4 (/ 305424 199195)) (* x5 (/ (- 207817) 199195)) (* x6 (/ (- 129783) 199195)) (* x7 (/ 52510 39839)) (* x8 (/ 51349 199195)) (* x9 (/ 382077 199195)) (* x10 (/ (- 17452) 39839)) (* x11 (/ 150407 199195)) (* x12 (/ (- 203427) 199195)) (* x13 (/ (- 29003) 39839)) (* (/ 200000 39839) ite10254_1))))) (and (or (<= (/ 24277 211322) (+ (* (- 1) x1) (* x2 (/ (- 104083) 105661)) (* x3 (/ (- 39937) 105661)) (* x4 (/ (- 84759) 211322)) (* x5 (/ 47243 105661)) (* x6 (/ (- 119601) 211322)) (* x7 (/ (- 20695) 105661)) (* x8 (/ (- 39143) 211322)) (* x9 (/ 19305 211322)) (* x10 (/ 77607 105661)) (* x11 (/ 179677 211322)) (* x12 (/ (- 130831) 105661)) (* x13 (/ (- 9516) 105661)))) (= 0 ite9985_1)) (or (not (<= (/ 24277 211322) (+ (* (- 1) x1) (* x2 (/ (- 104083) 105661)) (* x3 (/ (- 39937) 105661)) (* x4 (/ (- 84759) 211322)) (* x5 (/ 47243 105661)) (* x6 (/ (- 119601) 211322)) (* x7 (/ (- 20695) 105661)) (* x8 (/ (- 39143) 211322)) (* x9 (/ 19305 211322)) (* x10 (/ 77607 105661)) (* x11 (/ 179677 211322)) (* x12 (/ (- 130831) 105661)) (* x13 (/ (- 9516) 105661))))) (= (/ (- 24277) 211322) (+ x1 (* x2 (/ 104083 105661)) (* x3 (/ 39937 105661)) (* x4 (/ 84759 211322)) (* x5 (/ (- 47243) 105661)) (* x6 (/ 119601 211322)) (* x7 (/ 20695 105661)) (* x8 (/ 39143 211322)) (* x9 (/ (- 19305) 211322)) (* x10 (/ (- 77607) 105661)) (* x11 (/ (- 179677) 211322)) (* x12 (/ 130831 105661)) (* x13 (/ 9516 105661)) (* (/ 500000 105661) ite9985_1))))) (and (or (<= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191)))) (= 0 ite9716_1)) (or (not (<= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191))))) (= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191)) (* (/ (- 1000000) 233191) ite9716_1))))) (and (or (<= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196)))) (= 0 ite9447_1)) (or (not (<= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196))))) (= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196)) (* (/ (- 250000) 8049) ite9447_1))))) (and (or (<= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140)))) (= 0 ite9178_1)) (or (not (<= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140))))) (= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140)) (* (/ (- 50000) 9407) ite9178_1))))) (and (or (<= (/ 3064 211155) (+ (* (- 1) x1) (* x2 (/ 22567 211155)) (* x3 (/ 147184 211155)) (* x4 (/ (- 1198) 42231)) (* x5 (/ 14108 10055)) (* x6 (/ 106842 70385)) (* x7 (/ 84716 211155)) (* x8 (/ (- 96401) 211155)) (* x9 (/ (- 3671) 211155)) (* x10 (/ (- 13537) 70385)) (* x11 (/ 221801 211155)) (* x12 (/ (- 26081) 211155)) (* x13 (/ (- 26210) 42231)))) (= 0 ite8909_1)) (or (not (<= (/ 3064 211155) (+ (* (- 1) x1) (* x2 (/ 22567 211155)) (* x3 (/ 147184 211155)) (* x4 (/ (- 1198) 42231)) (* x5 (/ 14108 10055)) (* x6 (/ 106842 70385)) (* x7 (/ 84716 211155)) (* x8 (/ (- 96401) 211155)) (* x9 (/ (- 3671) 211155)) (* x10 (/ (- 13537) 70385)) (* x11 (/ 221801 211155)) (* x12 (/ (- 26081) 211155)) (* x13 (/ (- 26210) 42231))))) (= (/ (- 3064) 211155) (+ x1 (* x2 (/ (- 22567) 211155)) (* x3 (/ (- 147184) 211155)) (* x4 (/ 1198 42231)) (* x5 (/ (- 14108) 10055)) (* x6 (/ (- 106842) 70385)) (* x7 (/ (- 84716) 211155)) (* x8 (/ 96401 211155)) (* x9 (/ 3671 211155)) (* x10 (/ 13537 70385)) (* x11 (/ (- 221801) 211155)) (* x12 (/ 26081 211155)) (* x13 (/ 26210 42231)) (* (/ 200000 42231) ite8909_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 122504) 27845)) (* x3 (/ 238039 55690)) (* x4 (/ (- 36117) 55690)) (* x5 (/ (- 48611) 55690)) (* x6 (/ (- 16573) 11138)) (* x7 (/ 103301 27845)) (* x8 (/ (- 46309) 11138)) (* x9 (/ (- 109067) 55690)) (* x10 (/ 267083 55690)) (* x11 (/ 49424 27845)) (* x12 (/ (- 36449) 11138)) (* x13 (/ 36731 11138)))) (= 0 ite8640_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 122504) 27845)) (* x3 (/ 238039 55690)) (* x4 (/ (- 36117) 55690)) (* x5 (/ (- 48611) 55690)) (* x6 (/ (- 16573) 11138)) (* x7 (/ 103301 27845)) (* x8 (/ (- 46309) 11138)) (* x9 (/ (- 109067) 55690)) (* x10 (/ 267083 55690)) (* x11 (/ 49424 27845)) (* x12 (/ (- 36449) 11138)) (* x13 (/ 36731 11138))))) (= 0 (+ x1 (* x2 (/ 122504 27845)) (* x3 (/ (- 238039) 55690)) (* x4 (/ 36117 55690)) (* x5 (/ 48611 55690)) (* x6 (/ 16573 11138)) (* x7 (/ (- 103301) 27845)) (* x8 (/ 46309 11138)) (* x9 (/ 109067 55690)) (* x10 (/ (- 267083) 55690)) (* x11 (/ (- 49424) 27845)) (* x12 (/ 36449 11138)) (* x13 (/ (- 36731) 11138)) (* (/ 100000 5569) ite8640_1))))) (and (or (<= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741)))) (= 0 ite8394_1)) (or (not (<= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741))))) (= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741)) (* (/ (- 1000000) 182223) ite8394_1))))) (and (or (<= (/ (- 120) 63853) (+ (* (- 1) x1) (* x2 (/ 65655 127706)) (* x3 (/ 206537 127706)) (* x4 (/ (- 32315) 63853)) (* x5 (/ (- 66027) 63853)) (* x6 (/ (- 96083) 63853)) (* x7 (/ 126523 127706)) (* x8 (/ 133437 63853)) (* x9 (/ 74502 63853)) (* x10 (/ (- 86525) 127706)) (* x11 (/ 166569 127706)) (* x12 (/ 40032 63853)) (* x13 (/ (- 306129) 127706)))) (= 0 ite8125_1)) (or (not (<= (/ (- 120) 63853) (+ (* (- 1) x1) (* x2 (/ 65655 127706)) (* x3 (/ 206537 127706)) (* x4 (/ (- 32315) 63853)) (* x5 (/ (- 66027) 63853)) (* x6 (/ (- 96083) 63853)) (* x7 (/ 126523 127706)) (* x8 (/ 133437 63853)) (* x9 (/ 74502 63853)) (* x10 (/ (- 86525) 127706)) (* x11 (/ 166569 127706)) (* x12 (/ 40032 63853)) (* x13 (/ (- 306129) 127706))))) (= (/ 120 63853) (+ x1 (* x2 (/ (- 65655) 127706)) (* x3 (/ (- 206537) 127706)) (* x4 (/ 32315 63853)) (* x5 (/ 66027 63853)) (* x6 (/ 96083 63853)) (* x7 (/ (- 126523) 127706)) (* x8 (/ (- 133437) 63853)) (* x9 (/ (- 74502) 63853)) (* x10 (/ 86525 127706)) (* x11 (/ (- 166569) 127706)) (* x12 (/ (- 40032) 63853)) (* x13 (/ 306129 127706)) (* (/ 500000 63853) ite8125_1))))) (and (or (<= (/ (- 829) 81015) (+ (* (- 1) x1) (* x2 (/ 465163 162030)) (* x3 (/ (- 34187) 162030)) (* x4 (/ (- 40809) 27005)) (* x5 (/ 50107 27005)) (* x6 (/ (- 12521) 81015)) (* x7 (/ 7211 10802)) (* x8 (/ 53863 162030)) (* x9 (/ 246067 162030)) (* x10 (/ (- 34273) 54010)) (* x11 (/ (- 107143) 81015)) (* x12 (/ 427799 162030)) (* x13 (/ 29481 27005)))) (= 0 ite7856_1)) (or (not (<= (/ (- 829) 81015) (+ (* (- 1) x1) (* x2 (/ 465163 162030)) (* x3 (/ (- 34187) 162030)) (* x4 (/ (- 40809) 27005)) (* x5 (/ 50107 27005)) (* x6 (/ (- 12521) 81015)) (* x7 (/ 7211 10802)) (* x8 (/ 53863 162030)) (* x9 (/ 246067 162030)) (* x10 (/ (- 34273) 54010)) (* x11 (/ (- 107143) 81015)) (* x12 (/ 427799 162030)) (* x13 (/ 29481 27005))))) (= (/ 829 81015) (+ x1 (* x2 (/ (- 465163) 162030)) (* x3 (/ 34187 162030)) (* x4 (/ 40809 27005)) (* x5 (/ (- 50107) 27005)) (* x6 (/ 12521 81015)) (* x7 (/ (- 7211) 10802)) (* x8 (/ (- 53863) 162030)) (* x9 (/ (- 246067) 162030)) (* x10 (/ 34273 54010)) (* x11 (/ 107143 81015)) (* x12 (/ (- 427799) 162030)) (* x13 (/ (- 29481) 27005)) (* (/ 100000 16203) ite7856_1))))) (and (or (<= (/ 6281 45095) (+ (* (- 1) x1) (* x2 (/ 67063 225475)) (* x3 (/ (- 327942) 225475)) (* x4 (/ 231397 225475)) (* x5 (/ 217883 225475)) (* x6 (/ (- 231048) 225475)) (* x7 (/ 10249 45095)) (* x8 (/ (- 335958) 225475)) (* x9 (/ 194316 225475)) (* x10 (/ (- 167059) 225475)) (* x11 (/ (- 35673) 45095)) (* x12 (/ (- 81013) 225475)) (* x13 (/ (- 38281) 45095)))) (= 0 ite7587_1)) (or (not (<= (/ 6281 45095) (+ (* (- 1) x1) (* x2 (/ 67063 225475)) (* x3 (/ (- 327942) 225475)) (* x4 (/ 231397 225475)) (* x5 (/ 217883 225475)) (* x6 (/ (- 231048) 225475)) (* x7 (/ 10249 45095)) (* x8 (/ (- 335958) 225475)) (* x9 (/ 194316 225475)) (* x10 (/ (- 167059) 225475)) (* x11 (/ (- 35673) 45095)) (* x12 (/ (- 81013) 225475)) (* x13 (/ (- 38281) 45095))))) (= (/ (- 6281) 45095) (+ x1 (* x2 (/ (- 67063) 225475)) (* x3 (/ 327942 225475)) (* x4 (/ (- 231397) 225475)) (* x5 (/ (- 217883) 225475)) (* x6 (/ 231048 225475)) (* x7 (/ (- 10249) 45095)) (* x8 (/ 335958 225475)) (* x9 (/ (- 194316) 225475)) (* x10 (/ 167059 225475)) (* x11 (/ 35673 45095)) (* x12 (/ 81013 225475)) (* x13 (/ 38281 45095)) (* (/ 40000 9019) ite7587_1))))) (and (or (<= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899)))) (= 0 ite7318_1)) (or (not (<= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899))))) (= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899)) (* (/ (- 1000000) 178899) ite7318_1))))) (and (or (<= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557)))) (= 0 ite7049_1)) (or (not (<= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557))))) (= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557)) (* (/ (- 500000) 138557) ite7049_1))))) (and (or (<= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501)))) (= 0 ite6780_1)) (or (not (<= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501))))) (= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501)) (* (/ (- 1000000) 256503) ite6780_1))))) (and (or (<= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534)))) (= 0 ite6511_1)) (or (not (<= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534))))) (= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534)) (* (/ (- 125000) 11403) ite6511_1))))) (and (or (<= (/ 3200 134401) (+ (* (- 1) x1) (* x2 (/ (- 2963) 134401)) (* x3 (/ 360015 134401)) (* x4 (/ (- 215935) 134401)) (* x5 (/ 148016 134401)) (* x6 (/ 265846 134401)) (* x7 (/ 183746 134401)) (* x8 (/ 212518 134401)) (* x9 (/ 69936 134401)) (* x10 (/ (- 455806) 134401)) (* x11 (/ 288942 134401)) (* x12 (/ (- 226116) 134401)) (* x13 (/ (- 108753) 134401)))) (= 0 ite6242_1)) (or (not (<= (/ 3200 134401) (+ (* (- 1) x1) (* x2 (/ (- 2963) 134401)) (* x3 (/ 360015 134401)) (* x4 (/ (- 215935) 134401)) (* x5 (/ 148016 134401)) (* x6 (/ 265846 134401)) (* x7 (/ 183746 134401)) (* x8 (/ 212518 134401)) (* x9 (/ 69936 134401)) (* x10 (/ (- 455806) 134401)) (* x11 (/ 288942 134401)) (* x12 (/ (- 226116) 134401)) (* x13 (/ (- 108753) 134401))))) (= (/ (- 3200) 134401) (+ x1 (* x2 (/ 2963 134401)) (* x3 (/ (- 360015) 134401)) (* x4 (/ 215935 134401)) (* x5 (/ (- 148016) 134401)) (* x6 (/ (- 265846) 134401)) (* x7 (/ (- 183746) 134401)) (* x8 (/ (- 212518) 134401)) (* x9 (/ (- 69936) 134401)) (* x10 (/ 455806 134401)) (* x11 (/ (- 288942) 134401)) (* x12 (/ 226116 134401)) (* x13 (/ 108753 134401)) (* (/ 1000000 134401) ite6242_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 49416 749)) (* x3 (/ 39205 107)) (* x4 (/ 195704 749)) (* x5 (/ (- 183468) 749)) (* x6 (/ (- 127153) 749)) (* x7 (/ 134502 749)) (* x8 (/ (- 44718) 749)) (* x9 (/ 255912 749)) (* x10 (/ 94081 749)) (* x11 (/ 302348 749)) (* x12 (/ 126104 749)) (* x13 (/ (- 132204) 749)))) (= 0 ite5973_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 49416 749)) (* x3 (/ 39205 107)) (* x4 (/ 195704 749)) (* x5 (/ (- 183468) 749)) (* x6 (/ (- 127153) 749)) (* x7 (/ 134502 749)) (* x8 (/ (- 44718) 749)) (* x9 (/ 255912 749)) (* x10 (/ 94081 749)) (* x11 (/ 302348 749)) (* x12 (/ 126104 749)) (* x13 (/ (- 132204) 749))))) (= 0 (+ x1 (* x2 (/ (- 49416) 749)) (* x3 (/ (- 39205) 107)) (* x4 (/ (- 195704) 749)) (* x5 (/ 183468 749)) (* x6 (/ 127153 749)) (* x7 (/ (- 134502) 749)) (* x8 (/ 44718 749)) (* x9 (/ (- 255912) 749)) (* x10 (/ (- 94081) 749)) (* x11 (/ (- 302348) 749)) (* x12 (/ (- 126104) 749)) (* x13 (/ 132204 749)) (* (/ 1000000 749) ite5973_1))))) (and (or (<= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297)))) (= 0 ite5727_1)) (or (not (<= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297))))) (= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297)) (* (/ (- 1000000) 150297) ite5727_1))))) (and (or (<= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780)))) (= 0 ite5458_1)) (or (not (<= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780))))) (= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780)) (* (/ (- 50000) 9989) ite5458_1))))) (and (or (<= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268)))) (= 0 ite5189_1)) (or (not (<= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268))))) (= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268)) (* (/ (- 250000) 16817) ite5189_1))))) (and (or (<= (/ (- 2227) 294733) (+ (* (- 1) x1) (* x2 (/ (- 115056) 294733)) (* x3 (/ 107099 294733)) (* x4 (/ (- 67928) 294733)) (* x5 (/ 245201 294733)) (* x6 (/ 285470 294733)) (* x7 (/ (- 44824) 294733)) (* x8 (/ 285133 294733)) (* x9 (/ 3168 5561)) (* x10 (/ 98766 294733)) (* x11 (/ 245928 294733)) (* x12 (/ 68504 294733)) (* x13 (/ 234571 294733)))) (= 0 ite4920_1)) (or (not (<= (/ (- 2227) 294733) (+ (* (- 1) x1) (* x2 (/ (- 115056) 294733)) (* x3 (/ 107099 294733)) (* x4 (/ (- 67928) 294733)) (* x5 (/ 245201 294733)) (* x6 (/ 285470 294733)) (* x7 (/ (- 44824) 294733)) (* x8 (/ 285133 294733)) (* x9 (/ 3168 5561)) (* x10 (/ 98766 294733)) (* x11 (/ 245928 294733)) (* x12 (/ 68504 294733)) (* x13 (/ 234571 294733))))) (= (/ 2227 294733) (+ x1 (* x2 (/ 115056 294733)) (* x3 (/ (- 107099) 294733)) (* x4 (/ 67928 294733)) (* x5 (/ (- 245201) 294733)) (* x6 (/ (- 285470) 294733)) (* x7 (/ 44824 294733)) (* x8 (/ (- 285133) 294733)) (* x9 (/ (- 3168) 5561)) (* x10 (/ (- 98766) 294733)) (* x11 (/ (- 245928) 294733)) (* x12 (/ (- 68504) 294733)) (* x13 (/ (- 234571) 294733)) (* (/ 1000000 294733) ite4920_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 1429 20715)) (* x3 (/ 77923 82860)) (* x4 (/ (- 14603) 41430)) (* x5 (/ (- 18107) 20715)) (* x6 (/ (- 200383) 248580)) (* x7 (/ (- 4244) 20715)) (* x8 (/ 42581 248580)) (* x9 (/ (- 86363) 248580)) (* x10 (/ 13775 49716)) (* x11 (/ 46936 62145)) (* x12 (/ 96929 124290)) (* x13 (/ (- 12113) 16572)))) (= 0 ite4651_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 1429 20715)) (* x3 (/ 77923 82860)) (* x4 (/ (- 14603) 41430)) (* x5 (/ (- 18107) 20715)) (* x6 (/ (- 200383) 248580)) (* x7 (/ (- 4244) 20715)) (* x8 (/ 42581 248580)) (* x9 (/ (- 86363) 248580)) (* x10 (/ 13775 49716)) (* x11 (/ 46936 62145)) (* x12 (/ 96929 124290)) (* x13 (/ (- 12113) 16572))))) (= 0 (+ x1 (* x2 (/ (- 1429) 20715)) (* x3 (/ (- 77923) 82860)) (* x4 (/ 14603 41430)) (* x5 (/ 18107 20715)) (* x6 (/ 200383 248580)) (* x7 (/ 4244 20715)) (* x8 (/ (- 42581) 248580)) (* x9 (/ 86363 248580)) (* x10 (/ (- 13775) 49716)) (* x11 (/ (- 46936) 62145)) (* x12 (/ (- 96929) 124290)) (* x13 (/ 12113 16572)) (* (/ 50000 12429) ite4651_1))))) (and (or (<= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921)))) (= 0 ite4405_1)) (or (not (<= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921))))) (= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921)) (* (/ (- 1000000) 280921) ite4405_1))))) (and (or (<= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545)))) (= 0 ite4136_1)) (or (not (<= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545))))) (= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545)) (* (/ (- 200000) 6509) ite4136_1))))) (and (or (<= (/ (- 3087) 26510) (+ (* (- 1) x1) (* x2 (/ 17486 10845)) (* x3 (/ (- 17927) 15906)) (* x4 (/ (- 6491) 21690)) (* x5 (/ 53887 79530)) (* x6 (/ 19182 13255)) (* x7 (/ 68839 119295)) (* x8 (/ (- 73702) 119295)) (* x9 (/ (- 13546) 39765)) (* x10 (/ 124423 119295)) (* x11 (/ 270469 238590)) (* x12 (/ 34073 26510)) (* x13 (/ 342961 238590)))) (= 0 ite3890_1)) (or (not (<= (/ (- 3087) 26510) (+ (* (- 1) x1) (* x2 (/ 17486 10845)) (* x3 (/ (- 17927) 15906)) (* x4 (/ (- 6491) 21690)) (* x5 (/ 53887 79530)) (* x6 (/ 19182 13255)) (* x7 (/ 68839 119295)) (* x8 (/ (- 73702) 119295)) (* x9 (/ (- 13546) 39765)) (* x10 (/ 124423 119295)) (* x11 (/ 270469 238590)) (* x12 (/ 34073 26510)) (* x13 (/ 342961 238590))))) (= (/ 3087 26510) (+ x1 (* x2 (/ (- 17486) 10845)) (* x3 (/ 17927 15906)) (* x4 (/ 6491 21690)) (* x5 (/ (- 53887) 79530)) (* x6 (/ (- 19182) 13255)) (* x7 (/ (- 68839) 119295)) (* x8 (/ 73702 119295)) (* x9 (/ 13546 39765)) (* x10 (/ (- 124423) 119295)) (* x11 (/ (- 270469) 238590)) (* x12 (/ (- 34073) 26510)) (* x13 (/ (- 342961) 238590)) (* (/ 100000 23859) ite3890_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 3170 3051)) (* x3 (/ 132016 131193)) (* x4 (/ 187325 262386)) (* x5 (/ (- 64970) 131193)) (* x6 (/ (- 95051) 87462)) (* x7 (/ 35644 43731)) (* x8 (/ (- 86297) 131193)) (* x9 (/ 287431 262386)) (* x10 (/ (- 16279) 29154)) (* x11 (/ (- 126493) 262386)) (* x12 (/ 253381 262386)) (* x13 (/ 257375 262386)))) (= 0 ite3621_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 3170 3051)) (* x3 (/ 132016 131193)) (* x4 (/ 187325 262386)) (* x5 (/ (- 64970) 131193)) (* x6 (/ (- 95051) 87462)) (* x7 (/ 35644 43731)) (* x8 (/ (- 86297) 131193)) (* x9 (/ 287431 262386)) (* x10 (/ (- 16279) 29154)) (* x11 (/ (- 126493) 262386)) (* x12 (/ 253381 262386)) (* x13 (/ 257375 262386))))) (= 0 (+ x1 (* x2 (/ (- 3170) 3051)) (* x3 (/ (- 132016) 131193)) (* x4 (/ (- 187325) 262386)) (* x5 (/ 64970 131193)) (* x6 (/ 95051 87462)) (* x7 (/ (- 35644) 43731)) (* x8 (/ 86297 131193)) (* x9 (/ (- 287431) 262386)) (* x10 (/ 16279 29154)) (* x11 (/ 126493 262386)) (* x12 (/ (- 253381) 262386)) (* x13 (/ (- 257375) 262386)) (* (/ 500000 131193) ite3621_1))))) (and (or (<= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674)))) (= 0 ite3375_1)) (or (not (<= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674))))) (= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674)) (* (/ (- 500000) 70337) ite3375_1))))) (and (or (<= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072)))) (= 0 ite3106_1)) (or (not (<= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072))))) (= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072)) (* (/ (- 62500) 2817) ite3106_1))))) (and (or (<= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688)))) (= 0 ite2860_1)) (or (not (<= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688))))) (= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688)) (* (/ (- 62500) 293) ite2860_1))))) (and (or (<= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720)))) (= 0 ite2591_1)) (or (not (<= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720))))) (= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720)) (* (/ (- 12500) 1159) ite2591_1))))) (and (or (<= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844)))) (= 0 ite2345_1)) (or (not (<= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844))))) (= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844)) (* (/ (- 125000) 29711) ite2345_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 194265 88841)) (* x3 (/ (- 305908) 88841)) (* x4 (/ (- 262060) 88841)) (* x5 (/ 19596 88841)) (* x6 (/ 306929 88841)) (* x7 (/ 88258 88841)) (* x8 (/ (- 162210) 88841)) (* x9 (/ 189944 88841)) (* x10 (/ (- 70164) 88841)) (* x11 (/ 292434 88841)) (* x12 (/ (- 153056) 88841)) (* x13 (/ (- 108856) 88841)))) (= 0 ite2099_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 194265 88841)) (* x3 (/ (- 305908) 88841)) (* x4 (/ (- 262060) 88841)) (* x5 (/ 19596 88841)) (* x6 (/ 306929 88841)) (* x7 (/ 88258 88841)) (* x8 (/ (- 162210) 88841)) (* x9 (/ 189944 88841)) (* x10 (/ (- 70164) 88841)) (* x11 (/ 292434 88841)) (* x12 (/ (- 153056) 88841)) (* x13 (/ (- 108856) 88841))))) (= 0 (+ x1 (* x2 (/ (- 194265) 88841)) (* x3 (/ 305908 88841)) (* x4 (/ 262060 88841)) (* x5 (/ (- 19596) 88841)) (* x6 (/ (- 306929) 88841)) (* x7 (/ (- 88258) 88841)) (* x8 (/ 162210 88841)) (* x9 (/ (- 189944) 88841)) (* x10 (/ 70164 88841)) (* x11 (/ (- 292434) 88841)) (* x12 (/ 153056 88841)) (* x13 (/ 108856 88841)) (* (/ 1000000 88841) ite2099_1))))) (and (or (<= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398)))) (= 0 ite1853_1)) (or (not (<= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398))))) (= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398)) (* (/ (- 500000) 68097) ite1853_1))))) (and (or (<= (/ (- 860) 127429) (+ (* (- 1) x1) (* x2 (/ (- 37166) 127429)) (* x3 (/ (- 380479) 254858)) (* x4 (/ 151193 127429)) (* x5 (/ 74245 254858)) (* x6 (/ 263679 254858)) (* x7 (/ (- 89401) 254858)) (* x8 (/ (- 39532) 127429)) (* x9 (/ 173186 127429)) (* x10 (/ 18569 254858)) (* x11 (/ (- 31189) 254858)) (* x12 (/ 105434 127429)) (* x13 (/ 111634 127429)))) (= 0 ite1584_1)) (or (not (<= (/ (- 860) 127429) (+ (* (- 1) x1) (* x2 (/ (- 37166) 127429)) (* x3 (/ (- 380479) 254858)) (* x4 (/ 151193 127429)) (* x5 (/ 74245 254858)) (* x6 (/ 263679 254858)) (* x7 (/ (- 89401) 254858)) (* x8 (/ (- 39532) 127429)) (* x9 (/ 173186 127429)) (* x10 (/ 18569 254858)) (* x11 (/ (- 31189) 254858)) (* x12 (/ 105434 127429)) (* x13 (/ 111634 127429))))) (= (/ 860 127429) (+ x1 (* x2 (/ 37166 127429)) (* x3 (/ 380479 254858)) (* x4 (/ (- 151193) 127429)) (* x5 (/ (- 74245) 254858)) (* x6 (/ (- 263679) 254858)) (* x7 (/ 89401 254858)) (* x8 (/ 39532 127429)) (* x9 (/ (- 173186) 127429)) (* x10 (/ (- 18569) 254858)) (* x11 (/ 31189 254858)) (* x12 (/ (- 105434) 127429)) (* x13 (/ (- 111634) 127429)) (* (/ 500000 127429) ite1584_1))))) (and (or (<= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475)))) (= 0 ite1315_1)) (or (not (<= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475))))) (= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475)) (* (/ (- 20000) 5539) ite1315_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ 81084 162611)) (* x3 (/ (- 51427) 162611)) (* x4 (/ (- 244771) 162611)) (* x5 (/ (- 303116) 162611)) (* x6 (/ (- 44616) 162611)) (* x7 (/ (- 242593) 162611)) (* x8 (/ 68589 162611)) (* x9 (/ (- 307260) 162611)) (* x10 (/ 235110 162611)) (* x11 (/ (- 86091) 162611)) (* x12 (/ 148949 162611)) (* x13 (/ (- 33585) 162611)))) (= 0 ite1046_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ 81084 162611)) (* x3 (/ (- 51427) 162611)) (* x4 (/ (- 244771) 162611)) (* x5 (/ (- 303116) 162611)) (* x6 (/ (- 44616) 162611)) (* x7 (/ (- 242593) 162611)) (* x8 (/ 68589 162611)) (* x9 (/ (- 307260) 162611)) (* x10 (/ 235110 162611)) (* x11 (/ (- 86091) 162611)) (* x12 (/ 148949 162611)) (* x13 (/ (- 33585) 162611))))) (= 0 (+ x1 (* x2 (/ (- 81084) 162611)) (* x3 (/ 51427 162611)) (* x4 (/ 244771 162611)) (* x5 (/ 303116 162611)) (* x6 (/ 44616 162611)) (* x7 (/ 242593 162611)) (* x8 (/ (- 68589) 162611)) (* x9 (/ 307260 162611)) (* x10 (/ (- 235110) 162611)) (* x11 (/ 86091 162611)) (* x12 (/ (- 148949) 162611)) (* x13 (/ 33585 162611)) (* (/ 1000000 162611) ite1046_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 261427) 149915)) (* x3 (/ (- 178262) 149915)) (* x4 (/ 23612 149915)) (* x5 (/ (- 81984) 149915)) (* x6 (/ (- 140658) 149915)) (* x7 (/ 89407 149915)) (* x8 (/ (- 260566) 149915)) (* x9 (/ (- 239598) 149915)) (* x10 (/ (- 245773) 149915)) (* x11 (/ (- 22559) 29983)) (* x12 (/ (- 3553) 149915)) (* x13 (/ (- 14716) 149915)))) (= 0 ite800_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 261427) 149915)) (* x3 (/ (- 178262) 149915)) (* x4 (/ 23612 149915)) (* x5 (/ (- 81984) 149915)) (* x6 (/ (- 140658) 149915)) (* x7 (/ 89407 149915)) (* x8 (/ (- 260566) 149915)) (* x9 (/ (- 239598) 149915)) (* x10 (/ (- 245773) 149915)) (* x11 (/ (- 22559) 29983)) (* x12 (/ (- 3553) 149915)) (* x13 (/ (- 14716) 149915))))) (= 0 (+ x1 (* x2 (/ 261427 149915)) (* x3 (/ 178262 149915)) (* x4 (/ (- 23612) 149915)) (* x5 (/ 81984 149915)) (* x6 (/ 140658 149915)) (* x7 (/ (- 89407) 149915)) (* x8 (/ 260566 149915)) (* x9 (/ 239598 149915)) (* x10 (/ 245773 149915)) (* x11 (/ 22559 29983)) (* x12 (/ 3553 149915)) (* x13 (/ 14716 149915)) (* (/ 200000 29983) ite800_1))))) (and (or (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 171061) 165932)) (* x3 (/ 43546 41483)) (* x4 (/ 50577 41483)) (* x5 (/ (- 308539) 165932)) (* x6 (/ 146891 165932)) (* x7 (/ 104295 82966)) (* x8 (/ (- 25001) 82966)) (* x9 (/ (- 41465) 165932)) (* x10 (/ (- 59773) 41483)) (* x11 (/ (- 155253) 165932)) (* x12 (/ 25442 41483)) (* x13 (/ 75883 41483)))) (= 0 ite554_1)) (or (not (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 171061) 165932)) (* x3 (/ 43546 41483)) (* x4 (/ 50577 41483)) (* x5 (/ (- 308539) 165932)) (* x6 (/ 146891 165932)) (* x7 (/ 104295 82966)) (* x8 (/ (- 25001) 82966)) (* x9 (/ (- 41465) 165932)) (* x10 (/ (- 59773) 41483)) (* x11 (/ (- 155253) 165932)) (* x12 (/ 25442 41483)) (* x13 (/ 75883 41483))))) (= 0 (+ x1 (* x2 (/ 171061 165932)) (* x3 (/ (- 43546) 41483)) (* x4 (/ (- 50577) 41483)) (* x5 (/ 308539 165932)) (* x6 (/ (- 146891) 165932)) (* x7 (/ (- 104295) 82966)) (* x8 (/ 25001 82966)) (* x9 (/ 41465 165932)) (* x10 (/ 59773 41483)) (* x11 (/ 155253 165932)) (* x12 (/ (- 25442) 41483)) (* x13 (/ (- 75883) 41483)) (* (/ 250000 41483) ite554_1))))) (and (or (<= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455)))) (= 0 ite303_1)) (or (not (<= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455))))) (= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455)) (* (/ (- 200000) 50491) ite303_1)))))))
(<= (/ 433 6935) (+ (* (- 1) (ite (<= 0 (+ x1 (* x2 (/ (- 170) 7213)) (* x3 (/ 151469 252455)) (* x4 (/ (- 55616) 50491)) (* x5 (/ (- 263966) 252455)) (* x6 (/ (- 43972) 36065)) (* x7 (/ 39817 252455)) (* x8 (/ 8497 252455)) (* x9 (/ (- 279098) 252455)) (* x10 (/ 39881 252455)) (* x11 (/ (- 89482) 252455)) (* x12 (/ 62066 252455)) (* x13 (/ (- 296301) 252455)))) (+ (* x1 (/ 50491 200000)) (* x2 (/ (- 119) 20000)) (* x3 (/ 151469 1000000)) (* x4 (/ (- 869) 3125)) (* x5 (/ (- 131983) 500000)) (* x6 (/ (- 76951) 250000)) (* x7 (/ 39817 1000000)) (* x8 (/ 8497 1000000)) (* x9 (/ (- 139549) 500000)) (* x10 (/ 39881 1000000)) (* x11 (/ (- 44741) 500000)) (* x12 (/ 31033 500000)) (* x13 (/ (- 296301) 1000000))) 0)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 171061) 165932)) (* x3 (/ 43546 41483)) (* x4 (/ 50577 41483)) (* x5 (/ (- 308539) 165932)) (* x6 (/ 146891 165932)) (* x7 (/ 104295 82966)) (* x8 (/ (- 25001) 82966)) (* x9 (/ (- 41465) 165932)) (* x10 (/ (- 59773) 41483)) (* x11 (/ (- 155253) 165932)) (* x12 (/ 25442 41483)) (* x13 (/ 75883 41483)))) (+ (* x1 (/ (- 41483) 250000)) (* x2 (/ (- 171061) 1000000)) (* x3 (/ 21773 125000)) (* x4 (/ 50577 250000)) (* x5 (/ (- 308539) 1000000)) (* x6 (/ 146891 1000000)) (* x7 (/ 20859 100000)) (* x8 (/ (- 25001) 500000)) (* x9 (/ (- 8293) 200000)) (* x10 (/ (- 59773) 250000)) (* x11 (/ (- 155253) 1000000)) (* x12 (/ 12721 125000)) (* x13 (/ 75883 250000))) 0) (/ 659 5475)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 261427) 149915)) (* x3 (/ (- 178262) 149915)) (* x4 (/ 23612 149915)) (* x5 (/ (- 81984) 149915)) (* x6 (/ (- 140658) 149915)) (* x7 (/ 89407 149915)) (* x8 (/ (- 260566) 149915)) (* x9 (/ (- 239598) 149915)) (* x10 (/ (- 245773) 149915)) (* x11 (/ (- 22559) 29983)) (* x12 (/ (- 3553) 149915)) (* x13 (/ (- 14716) 149915)))) (+ (* x1 (/ (- 29983) 200000)) (* x2 (/ (- 261427) 1000000)) (* x3 (/ (- 89131) 500000)) (* x4 (/ 5903 250000)) (* x5 (/ (- 1281) 15625)) (* x6 (/ (- 70329) 500000)) (* x7 (/ 89407 1000000)) (* x8 (/ (- 130283) 500000)) (* x9 (/ (- 119799) 500000)) (* x10 (/ (- 245773) 1000000)) (* x11 (/ (- 22559) 200000)) (* x12 (/ (- 3553) 1000000)) (* x13 (/ (- 3679) 250000))) 0) (/ (- 59827) 104025)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ 81084 162611)) (* x3 (/ (- 51427) 162611)) (* x4 (/ (- 244771) 162611)) (* x5 (/ (- 303116) 162611)) (* x6 (/ (- 44616) 162611)) (* x7 (/ (- 242593) 162611)) (* x8 (/ 68589 162611)) (* x9 (/ (- 307260) 162611)) (* x10 (/ 235110 162611)) (* x11 (/ (- 86091) 162611)) (* x12 (/ 148949 162611)) (* x13 (/ (- 33585) 162611)))) (+ (* x1 (/ (- 162611) 1000000)) (* x2 (/ 20271 250000)) (* x3 (/ (- 51427) 1000000)) (* x4 (/ (- 244771) 1000000)) (* x5 (/ (- 75779) 250000)) (* x6 (/ (- 5577) 125000)) (* x7 (/ (- 242593) 1000000)) (* x8 (/ 68589 1000000)) (* x9 (/ (- 15363) 50000)) (* x10 (/ 23511 100000)) (* x11 (/ (- 86091) 1000000)) (* x12 (/ 148949 1000000)) (* x13 (/ (- 6717) 200000))) 0) (/ 28049 34675)) (* (ite (<= (/ 1551 138475) (+ x1 (* x2 (/ (- 170603) 138475)) (* x3 (/ 37962 27695)) (* x4 (/ (- 151976) 138475)) (* x5 (/ 191633 276950)) (* x6 (/ 82 5539)) (* x7 (/ 24571 27695)) (* x8 (/ 10927 27695)) (* x9 (/ (- 27233) 55390)) (* x10 (/ (- 196182) 138475)) (* x11 (/ 99667 276950)) (* x12 (/ (- 235) 382)) (* x13 (/ (- 146796) 138475)))) (+ (* x1 (/ 5539 20000)) (* x2 (/ (- 170603) 500000)) (* x3 (/ 18981 50000)) (* x4 (/ (- 18997) 62500)) (* x5 (/ 191633 1000000)) (* x6 (/ 41 10000)) (* x7 (/ 24571 100000)) (* x8 (/ 10927 100000)) (* x9 (/ (- 27233) 200000)) (* x10 (/ (- 98091) 250000)) (* x11 (/ 99667 1000000)) (* x12 (/ (- 1363) 8000)) (* x13 (/ (- 36699) 125000)) (/ (- 1551) 500000)) 0) (/ (- 250213) 208050)) (* (ite (<= (/ (- 860) 127429) (+ (* (- 1) x1) (* x2 (/ (- 37166) 127429)) (* x3 (/ (- 380479) 254858)) (* x4 (/ 151193 127429)) (* x5 (/ 74245 254858)) (* x6 (/ 263679 254858)) (* x7 (/ (- 89401) 254858)) (* x8 (/ (- 39532) 127429)) (* x9 (/ 173186 127429)) (* x10 (/ 18569 254858)) (* x11 (/ (- 31189) 254858)) (* x12 (/ 105434 127429)) (* x13 (/ 111634 127429)))) (+ (* x1 (/ (- 127429) 500000)) (* x2 (/ (- 18583) 250000)) (* x3 (/ (- 380479) 1000000)) (* x4 (/ 151193 500000)) (* x5 (/ 14849 200000)) (* x6 (/ 263679 1000000)) (* x7 (/ (- 89401) 1000000)) (* x8 (/ (- 9883) 125000)) (* x9 (/ 86593 250000)) (* x10 (/ 18569 1000000)) (* x11 (/ (- 31189) 1000000)) (* x12 (/ 52717 250000)) (* x13 (/ 55817 250000)) (/ 43 25000)) 0) (/ 65443 104025)) (* (ite (<= (/ (- 94) 68097) (+ x1 (* x2 (/ 22544 22699)) (* x3 (/ 62803 45398)) (* x4 (/ 126755 136194)) (* x5 (/ (- 5651) 45398)) (* x6 (/ (- 45071) 136194)) (* x7 (/ 5805 22699)) (* x8 (/ 273301 136194)) (* x9 (/ 449609 136194)) (* x10 (/ 164968 68097)) (* x11 (/ 16684 22699)) (* x12 (/ 55475 136194)) (* x13 (/ (- 11823) 45398)))) (+ (* x1 (/ 68097 500000)) (* x2 (/ 4227 31250)) (* x3 (/ 188409 1000000)) (* x4 (/ 25351 200000)) (* x5 (/ (- 16953) 1000000)) (* x6 (/ (- 45071) 1000000)) (* x7 (/ 3483 100000)) (* x8 (/ 273301 1000000)) (* x9 (/ 449609 1000000)) (* x10 (/ 20621 62500)) (* x11 (/ 12513 125000)) (* x12 (/ 2219 40000)) (* x13 (/ (- 35469) 1000000)) (/ 47 250000)) 0) (/ 8381 34675)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ 194265 88841)) (* x3 (/ (- 305908) 88841)) (* x4 (/ (- 262060) 88841)) (* x5 (/ 19596 88841)) (* x6 (/ 306929 88841)) (* x7 (/ 88258 88841)) (* x8 (/ (- 162210) 88841)) (* x9 (/ 189944 88841)) (* x10 (/ (- 70164) 88841)) (* x11 (/ 292434 88841)) (* x12 (/ (- 153056) 88841)) (* x13 (/ (- 108856) 88841)))) (+ (* x1 (/ (- 88841) 1000000)) (* x2 (/ 38853 200000)) (* x3 (/ (- 76477) 250000)) (* x4 (/ (- 13103) 50000)) (* x5 (/ 4899 250000)) (* x6 (/ 306929 1000000)) (* x7 (/ 44129 500000)) (* x8 (/ (- 16221) 100000)) (* x9 (/ 23743 125000)) (* x10 (/ (- 17541) 250000)) (* x11 (/ 146217 500000)) (* x12 (/ (- 4783) 31250)) (* x13 (/ (- 13607) 125000))) 0) (/ (- 22102) 34675)) (* (ite (<= 0 (+ x1 (* x2 (/ (- 5551) 5402)) (* x3 (/ (- 188153) 237688)) (* x4 (/ (- 18156) 29711)) (* x5 (/ (- 7291) 21608)) (* x6 (/ 121787 237688)) (* x7 (/ 16629 59422)) (* x8 (/ (- 77031) 237688)) (* x9 (/ 24567 29711)) (* x10 (/ (- 169519) 237688)) (* x11 (/ 76649 59422)) (* x12 (/ (- 24028) 29711)) (* x13 (/ 23087 118844)))) (+ (* x1 (/ 29711 125000)) (* x2 (/ (- 61061) 250000)) (* x3 (/ (- 188153) 1000000)) (* x4 (/ (- 4539) 31250)) (* x5 (/ (- 80201) 1000000)) (* x6 (/ 121787 1000000)) (* x7 (/ 16629 250000)) (* x8 (/ (- 77031) 1000000)) (* x9 (/ 24567 125000)) (* x10 (/ (- 169519) 1000000)) (* x11 (/ 76649 250000)) (* x12 (/ (- 6007) 31250)) (* x13 (/ 23087 500000))) 0) (/ (- 30857) 41610)) (* (ite (<= 0 (+ x1 (* x2 (/ (- 18745) 9272)) (* x3 (/ (- 6753) 2440)) (* x4 (/ (- 6947) 2318)) (* x5 (/ (- 3679) 11590)) (* x6 (/ (- 202261) 92720)) (* x7 (/ 17649 92720)) (* x8 (/ (- 73899) 92720)) (* x9 (/ (- 1641) 92720)) (* x10 (/ (- 10009) 4880)) (* x11 (/ (- 100173) 92720)) (* x12 (/ 114369 46360)) (* x13 (/ (- 137079) 92720)))) (+ (* x1 (/ 1159 12500)) (* x2 (/ (- 3749) 20000)) (* x3 (/ (- 128307) 500000)) (* x4 (/ (- 6947) 25000)) (* x5 (/ (- 3679) 125000)) (* x6 (/ (- 202261) 1000000)) (* x7 (/ 17649 1000000)) (* x8 (/ (- 73899) 1000000)) (* x9 (/ (- 1641) 1000000)) (* x10 (/ (- 190171) 1000000)) (* x11 (/ (- 100173) 1000000)) (* x12 (/ 114369 500000)) (* x13 (/ (- 137079) 1000000))) 0) (/ 26367 34675)) (* (ite (<= (/ (- 2219) 4688) (+ x1 (* x2 (/ 223231 4688)) (* x3 (/ (- 4427) 2344)) (* x4 (/ (- 208743) 4688)) (* x5 (/ 155153 2344)) (* x6 (/ 263703 4688)) (* x7 (/ (- 189705) 4688)) (* x8 (/ 19559 1172)) (* x9 (/ 192171 2344)) (* x10 (/ 58905 2344)) (* x11 (/ (- 268545) 4688)) (* x12 (/ 153741 2344)) (* x13 (/ 203515 4688)))) (+ (* x1 (/ 293 62500)) (* x2 (/ 223231 1000000)) (* x3 (/ (- 4427) 500000)) (* x4 (/ (- 208743) 1000000)) (* x5 (/ 155153 500000)) (* x6 (/ 263703 1000000)) (* x7 (/ (- 37941) 200000)) (* x8 (/ 19559 250000)) (* x9 (/ 192171 500000)) (* x10 (/ 11781 100000)) (* x11 (/ (- 53709) 200000)) (* x12 (/ 153741 500000)) (* x13 (/ 40703 200000)) (/ 2219 1000000)) 0) (/ 59179 41610)) (* (ite (<= 0 (+ x1 (* x2 (/ (- 73243) 15024)) (* x3 (/ 110353 45072)) (* x4 (/ 11227 7512)) (* x5 (/ (- 12843) 5008)) (* x6 (/ 17099 15024)) (* x7 (/ 18199 22536)) (* x8 (/ (- 2145) 2504)) (* x9 (/ (- 2575) 5008)) (* x10 (/ 33595 5634)) (* x11 (/ 727 15024)) (* x12 (/ (- 8197) 7512)) (* x13 (/ (- 92147) 45072)))) (+ (* x1 (/ 2817 62500)) (* x2 (/ (- 219729) 1000000)) (* x3 (/ 110353 1000000)) (* x4 (/ 33681 500000)) (* x5 (/ (- 115587) 1000000)) (* x6 (/ 51297 1000000)) (* x7 (/ 18199 500000)) (* x8 (/ (- 3861) 100000)) (* x9 (/ (- 927) 40000)) (* x10 (/ 6719 25000)) (* x11 (/ 2181 1000000)) (* x12 (/ (- 24591) 500000)) (* x13 (/ (- 92147) 1000000))) 0) (/ (- 288343) 208050)) (* (ite (<= (/ 3201 140674) (+ x1 (* x2 (/ (- 201365) 70337)) (* x3 (/ (- 53703) 140674)) (* x4 (/ (- 106573) 70337)) (* x5 (/ 68210 70337)) (* x6 (/ 2605 140674)) (* x7 (/ (- 11098) 70337)) (* x8 (/ (- 126585) 70337)) (* x9 (/ 116877 70337)) (* x10 (/ 109351 70337)) (* x11 (/ 29671 70337)) (* x12 (/ 23960 70337)) (* x13 (/ 45011 140674)))) (+ (* x1 (/ 70337 500000)) (* x2 (/ (- 40273) 100000)) (* x3 (/ (- 53703) 1000000)) (* x4 (/ (- 106573) 500000)) (* x5 (/ 6821 50000)) (* x6 (/ 521 200000)) (* x7 (/ (- 5549) 250000)) (* x8 (/ (- 25317) 100000)) (* x9 (/ 116877 500000)) (* x10 (/ 109351 500000)) (* x11 (/ 29671 500000)) (* x12 (/ 599 12500)) (* x13 (/ 45011 1000000)) (/ (- 3201) 1000000)) 0) (/ (- 39503) 104025)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ 3170 3051)) (* x3 (/ 132016 131193)) (* x4 (/ 187325 262386)) (* x5 (/ (- 64970) 131193)) (* x6 (/ (- 95051) 87462)) (* x7 (/ 35644 43731)) (* x8 (/ (- 86297) 131193)) (* x9 (/ 287431 262386)) (* x10 (/ (- 16279) 29154)) (* x11 (/ (- 126493) 262386)) (* x12 (/ 253381 262386)) (* x13 (/ 257375 262386)))) (+ (* x1 (/ (- 131193) 500000)) (* x2 (/ 13631 50000)) (* x3 (/ 8251 31250)) (* x4 (/ 7493 40000)) (* x5 (/ (- 6497) 50000)) (* x6 (/ (- 285153) 1000000)) (* x7 (/ 26733 125000)) (* x8 (/ (- 86297) 500000)) (* x9 (/ 287431 1000000)) (* x10 (/ (- 146511) 1000000)) (* x11 (/ (- 126493) 1000000)) (* x12 (/ 253381 1000000)) (* x13 (/ 2059 8000))) 0) (/ (- 65123) 41610)) (* (ite (<= (/ (- 3087) 26510) (+ (* (- 1) x1) (* x2 (/ 17486 10845)) (* x3 (/ (- 17927) 15906)) (* x4 (/ (- 6491) 21690)) (* x5 (/ 53887 79530)) (* x6 (/ 19182 13255)) (* x7 (/ 68839 119295)) (* x8 (/ (- 73702) 119295)) (* x9 (/ (- 13546) 39765)) (* x10 (/ 124423 119295)) (* x11 (/ 270469 238590)) (* x12 (/ 34073 26510)) (* x13 (/ 342961 238590)))) (+ (* x1 (/ (- 23859) 100000)) (* x2 (/ 96173 250000)) (* x3 (/ (- 53781) 200000)) (* x4 (/ (- 71401) 1000000)) (* x5 (/ 161661 1000000)) (* x6 (/ 86319 250000)) (* x7 (/ 68839 500000)) (* x8 (/ (- 36851) 250000)) (* x9 (/ (- 20319) 250000)) (* x10 (/ 124423 500000)) (* x11 (/ 270469 1000000)) (* x12 (/ 306657 1000000)) (* x13 (/ 342961 1000000)) (/ 27783 1000000)) 0) (/ 281539 208050)) (* (ite (<= 0 (+ x1 (* x2 (/ 17264 6509)) (* x3 (/ 116363 32545)) (* x4 (/ 37647 32545)) (* x5 (/ 46997 32545)) (* x6 (/ (- 237933) 32545)) (* x7 (/ 276919 32545)) (* x8 (/ (- 256868) 32545)) (* x9 (/ 47499 6509)) (* x10 (/ (- 31072) 32545)) (* x11 (/ (- 248783) 32545)) (* x12 (/ 243341 32545)) (* x13 (/ 141328 32545)))) (+ (* x1 (/ 6509 200000)) (* x2 (/ 1079 12500)) (* x3 (/ 116363 1000000)) (* x4 (/ 37647 1000000)) (* x5 (/ 46997 1000000)) (* x6 (/ (- 237933) 1000000)) (* x7 (/ 276919 1000000)) (* x8 (/ (- 64217) 250000)) (* x9 (/ 47499 200000)) (* x10 (/ (- 971) 31250)) (* x11 (/ (- 248783) 1000000)) (* x12 (/ 243341 1000000)) (* x13 (/ 8833 62500))) 0) (/ (- 6526) 4161)) (* (ite (<= (/ 6897 280921) (+ x1 (* x2 (/ (- 12181) 280921)) (* x3 (/ 6726 280921)) (* x4 (/ (- 146650) 280921)) (* x5 (/ (- 71803) 280921)) (* x6 (/ (- 60406) 280921)) (* x7 (/ (- 346511) 280921)) (* x8 (/ 198260 280921)) (* x9 (/ 275299 280921)) (* x10 (/ (- 55837) 280921)) (* x11 (/ 74287 280921)) (* x12 (/ 224874 280921)) (* x13 (/ (- 182099) 280921)))) (+ (* x1 (/ 280921 1000000)) (* x2 (/ (- 12181) 1000000)) (* x3 (/ 3363 500000)) (* x4 (/ (- 2933) 20000)) (* x5 (/ (- 71803) 1000000)) (* x6 (/ (- 30203) 500000)) (* x7 (/ (- 346511) 1000000)) (* x8 (/ 9913 50000)) (* x9 (/ 275299 1000000)) (* x10 (/ (- 55837) 1000000)) (* x11 (/ 74287 1000000)) (* x12 (/ 112437 500000)) (* x13 (/ (- 182099) 1000000)) (/ (- 6897) 1000000)) 0) (/ 155777 208050)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ 1429 20715)) (* x3 (/ 77923 82860)) (* x4 (/ (- 14603) 41430)) (* x5 (/ (- 18107) 20715)) (* x6 (/ (- 200383) 248580)) (* x7 (/ (- 4244) 20715)) (* x8 (/ 42581 248580)) (* x9 (/ (- 86363) 248580)) (* x10 (/ 13775 49716)) (* x11 (/ 46936 62145)) (* x12 (/ 96929 124290)) (* x13 (/ (- 12113) 16572)))) (+ (* x1 (/ (- 12429) 50000)) (* x2 (/ 4287 250000)) (* x3 (/ 233769 1000000)) (* x4 (/ (- 43809) 500000)) (* x5 (/ (- 54321) 250000)) (* x6 (/ (- 200383) 1000000)) (* x7 (/ (- 3183) 62500)) (* x8 (/ 42581 1000000)) (* x9 (/ (- 86363) 1000000)) (* x10 (/ 551 8000)) (* x11 (/ 5867 31250)) (* x12 (/ 96929 500000)) (* x13 (/ (- 36339) 200000))) 0) (/ 96557 104025)) (* (ite (<= (/ (- 2227) 294733) (+ (* (- 1) x1) (* x2 (/ (- 115056) 294733)) (* x3 (/ 107099 294733)) (* x4 (/ (- 67928) 294733)) (* x5 (/ 245201 294733)) (* x6 (/ 285470 294733)) (* x7 (/ (- 44824) 294733)) (* x8 (/ 285133 294733)) (* x9 (/ 3168 5561)) (* x10 (/ 98766 294733)) (* x11 (/ 245928 294733)) (* x12 (/ 68504 294733)) (* x13 (/ 234571 294733)))) (+ (* x1 (/ (- 294733) 1000000)) (* x2 (/ (- 7191) 62500)) (* x3 (/ 107099 1000000)) (* x4 (/ (- 8491) 125000)) (* x5 (/ 245201 1000000)) (* x6 (/ 28547 100000)) (* x7 (/ (- 5603) 125000)) (* x8 (/ 285133 1000000)) (* x9 (/ 5247 31250)) (* x10 (/ 49383 500000)) (* x11 (/ 30741 125000)) (* x12 (/ 8563 125000)) (* x13 (/ 234571 1000000)) (/ 2227 1000000)) 0) (/ 149239 104025)) (* (ite (<= (/ 6821 67268) (+ x1 (* x2 (/ (- 60187) 67268)) (* x3 (/ 198773 67268)) (* x4 (/ (- 80219) 33634)) (* x5 (/ 56501 67268)) (* x6 (/ 296935 67268)) (* x7 (/ (- 71077) 16817)) (* x8 (/ (- 31085) 16817)) (* x9 (/ (- 212649) 67268)) (* x10 (/ 143367 67268)) (* x11 (/ (- 23171) 16817)) (* x12 (/ (- 86695) 33634)) (* x13 (/ 31147 67268)))) (+ (* x1 (/ 16817 250000)) (* x2 (/ (- 60187) 1000000)) (* x3 (/ 198773 1000000)) (* x4 (/ (- 80219) 500000)) (* x5 (/ 56501 1000000)) (* x6 (/ 59387 200000)) (* x7 (/ (- 71077) 250000)) (* x8 (/ (- 6217) 50000)) (* x9 (/ (- 212649) 1000000)) (* x10 (/ 143367 1000000)) (* x11 (/ (- 23171) 250000)) (* x12 (/ (- 17339) 100000)) (* x13 (/ 31147 1000000)) (/ (- 6821) 1000000)) 0) (/ 30043 208050)) (* (ite (<= (/ (- 492) 49945) (+ x1 (* x2 (/ (- 42029) 199780)) (* x3 (/ 13227 49945)) (* x4 (/ 13777 49945)) (* x5 (/ 31124 49945)) (* x6 (/ (- 234397) 199780)) (* x7 (/ (- 27131) 99890)) (* x8 (/ 68848 49945)) (* x9 (/ 75419 39956)) (* x10 (/ 204331 99890)) (* x11 (/ (- 45077) 99890)) (* x12 (/ 30193 49945)) (* x13 (/ (- 185761) 199780)))) (+ (* x1 (/ 9989 50000)) (* x2 (/ (- 42029) 1000000)) (* x3 (/ 13227 250000)) (* x4 (/ 13777 250000)) (* x5 (/ 7781 62500)) (* x6 (/ (- 234397) 1000000)) (* x7 (/ (- 27131) 500000)) (* x8 (/ 4303 15625)) (* x9 (/ 75419 200000)) (* x10 (/ 204331 500000)) (* x11 (/ (- 45077) 500000)) (* x12 (/ 30193 250000)) (* x13 (/ (- 185761) 1000000)) (/ 123 62500)) 0) (/ 94331 104025)) (* (ite (<= (/ 3092 150297) (+ x1 (* x2 (/ (- 144972) 50099)) (* x3 (/ 102657 50099)) (* x4 (/ 3321 2947)) (* x5 (/ 40136 21471)) (* x6 (/ (- 247342) 150297)) (* x7 (/ (- 49822) 50099)) (* x8 (/ 139172 150297)) (* x9 (/ (- 330338) 150297)) (* x10 (/ (- 21618) 50099)) (* x11 (/ 263435 150297)) (* x12 (/ (- 16259) 7157)) (* x13 (/ (- 100055) 150297)))) (+ (* x1 (/ 150297 1000000)) (* x2 (/ (- 108729) 250000)) (* x3 (/ 307971 1000000)) (* x4 (/ 169371 1000000)) (* x5 (/ 35119 125000)) (* x6 (/ (- 123671) 500000)) (* x7 (/ (- 74733) 500000)) (* x8 (/ 34793 250000)) (* x9 (/ (- 165169) 500000)) (* x10 (/ (- 32427) 500000)) (* x11 (/ 52687 200000)) (* x12 (/ (- 341439) 1000000)) (* x13 (/ (- 20011) 200000)) (/ (- 773) 250000)) 0) (/ (- 136577) 104025)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ 49416 749)) (* x3 (/ 39205 107)) (* x4 (/ 195704 749)) (* x5 (/ (- 183468) 749)) (* x6 (/ (- 127153) 749)) (* x7 (/ 134502 749)) (* x8 (/ (- 44718) 749)) (* x9 (/ 255912 749)) (* x10 (/ 94081 749)) (* x11 (/ 302348 749)) (* x12 (/ 126104 749)) (* x13 (/ (- 132204) 749)))) (+ (* x1 (/ (- 749) 1000000)) (* x2 (/ 6177 125000)) (* x3 (/ 54887 200000)) (* x4 (/ 24463 125000)) (* x5 (/ (- 45867) 250000)) (* x6 (/ (- 127153) 1000000)) (* x7 (/ 67251 500000)) (* x8 (/ (- 22359) 500000)) (* x9 (/ 31989 125000)) (* x10 (/ 94081 1000000)) (* x11 (/ 75587 250000)) (* x12 (/ 15763 125000)) (* x13 (/ (- 33051) 250000))) 0) (/ (- 32951) 20805)) (* (ite (<= (/ 3200 134401) (+ (* (- 1) x1) (* x2 (/ (- 2963) 134401)) (* x3 (/ 360015 134401)) (* x4 (/ (- 215935) 134401)) (* x5 (/ 148016 134401)) (* x6 (/ 265846 134401)) (* x7 (/ 183746 134401)) (* x8 (/ 212518 134401)) (* x9 (/ 69936 134401)) (* x10 (/ (- 455806) 134401)) (* x11 (/ 288942 134401)) (* x12 (/ (- 226116) 134401)) (* x13 (/ (- 108753) 134401)))) (+ (* x1 (/ (- 134401) 1000000)) (* x2 (/ (- 2963) 1000000)) (* x3 (/ 72003 200000)) (* x4 (/ (- 43187) 200000)) (* x5 (/ 9251 62500)) (* x6 (/ 132923 500000)) (* x7 (/ 91873 500000)) (* x8 (/ 106259 500000)) (* x9 (/ 4371 62500)) (* x10 (/ (- 227903) 500000)) (* x11 (/ 144471 500000)) (* x12 (/ (- 56529) 250000)) (* x13 (/ (- 108753) 1000000)) (/ (- 2) 625)) 0) (/ (- 10871) 10950)) (* (ite (<= (/ (- 619) 22806) (+ x1 (* x2 (/ (- 196069) 45612)) (* x3 (/ 63701 15204)) (* x4 (/ (- 258977) 91224)) (* x5 (/ 8905 45612)) (* x6 (/ 241733 91224)) (* x7 (/ 63935 91224)) (* x8 (/ 12655 3801)) (* x9 (/ 26 11403)) (* x10 (/ (- 209459) 91224)) (* x11 (/ 9215 11403)) (* x12 (/ (- 5332) 11403)) (* x13 (/ 6513 2534)))) (+ (* x1 (/ 11403 125000)) (* x2 (/ (- 196069) 500000)) (* x3 (/ 191103 500000)) (* x4 (/ (- 258977) 1000000)) (* x5 (/ 1781 100000)) (* x6 (/ 241733 1000000)) (* x7 (/ 12787 200000)) (* x8 (/ 7593 25000)) (* x9 (/ 13 62500)) (* x10 (/ (- 209459) 1000000)) (* x11 (/ 1843 25000)) (* x12 (/ (- 1333) 31250)) (* x13 (/ 58617 250000)) (/ 619 250000)) 0) (/ (- 105357) 69350)) (* (ite (<= (/ (- 778) 19731) (+ x1 (* x2 (/ 93035 256503)) (* x3 (/ 16180 85501)) (* x4 (/ (- 154342) 256503)) (* x5 (/ 175093 256503)) (* x6 (/ 224729 256503)) (* x7 (/ 165200 256503)) (* x8 (/ (- 188317) 256503)) (* x9 (/ 7034 85501)) (* x10 (/ (- 89723) 256503)) (* x11 (/ 150907 256503)) (* x12 (/ 283750 256503)) (* x13 (/ 81492 85501)))) (+ (* x1 (/ 256503 1000000)) (* x2 (/ 18607 200000)) (* x3 (/ 2427 50000)) (* x4 (/ (- 77171) 500000)) (* x5 (/ 175093 1000000)) (* x6 (/ 224729 1000000)) (* x7 (/ 413 2500)) (* x8 (/ (- 188317) 1000000)) (* x9 (/ 10551 500000)) (* x10 (/ (- 89723) 1000000)) (* x11 (/ 150907 1000000)) (* x12 (/ 227 800)) (* x13 (/ 61119 250000)) (/ 5057 500000)) 0) (/ 17307 13870)) (* (ite (<= (/ 3080 138557) (+ x1 (* x2 (/ 18085 138557)) (* x3 (/ 102400 138557)) (* x4 (/ 158763 277114)) (* x5 (/ (- 39409) 277114)) (* x6 (/ (- 119487) 138557)) (* x7 (/ (- 8263) 277114)) (* x8 (/ 112937 277114)) (* x9 (/ (- 230946) 138557)) (* x10 (/ (- 426615) 277114)) (* x11 (/ (- 15537) 138557)) (* x12 (/ (- 138982) 138557)) (* x13 (/ (- 161160) 138557)))) (+ (* x1 (/ 138557 500000)) (* x2 (/ 3617 100000)) (* x3 (/ 128 625)) (* x4 (/ 158763 1000000)) (* x5 (/ (- 39409) 1000000)) (* x6 (/ (- 119487) 500000)) (* x7 (/ (- 8263) 1000000)) (* x8 (/ 112937 1000000)) (* x9 (/ (- 115473) 250000)) (* x10 (/ (- 85323) 200000)) (* x11 (/ (- 15537) 500000)) (* x12 (/ (- 69491) 250000)) (* x13 (/ (- 4029) 12500)) (/ (- 77) 12500)) 0) (/ (- 12763) 69350)) (* (ite (<= (/ 22388 178899) (+ x1 (* x2 (/ 202052 178899)) (* x3 (/ 182155 178899)) (* x4 (/ 172637 178899)) (* x5 (/ (- 239891) 178899)) (* x6 (/ (- 9409) 59633)) (* x7 (/ (- 10604) 178899)) (* x8 (/ 47786 178899)) (* x9 (/ 136127 59633)) (* x10 (/ (- 239437) 178899)) (* x11 (/ 32880 59633)) (* x12 (/ 30671 178899)) (* x13 (/ (- 229711) 178899)))) (+ (* x1 (/ 178899 1000000)) (* x2 (/ 50513 250000)) (* x3 (/ 36431 200000)) (* x4 (/ 172637 1000000)) (* x5 (/ (- 239891) 1000000)) (* x6 (/ (- 28227) 1000000)) (* x7 (/ (- 2651) 250000)) (* x8 (/ 23893 500000)) (* x9 (/ 408381 1000000)) (* x10 (/ (- 239437) 1000000)) (* x11 (/ 1233 12500)) (* x12 (/ 30671 1000000)) (* x13 (/ (- 229711) 1000000)) (/ (- 5597) 250000)) 0) (/ 249221 208050)) (* (ite (<= (/ 6281 45095) (+ (* (- 1) x1) (* x2 (/ 67063 225475)) (* x3 (/ (- 327942) 225475)) (* x4 (/ 231397 225475)) (* x5 (/ 217883 225475)) (* x6 (/ (- 231048) 225475)) (* x7 (/ 10249 45095)) (* x8 (/ (- 335958) 225475)) (* x9 (/ 194316 225475)) (* x10 (/ (- 167059) 225475)) (* x11 (/ (- 35673) 45095)) (* x12 (/ (- 81013) 225475)) (* x13 (/ (- 38281) 45095)))) (+ (* x1 (/ (- 9019) 40000)) (* x2 (/ 67063 1000000)) (* x3 (/ (- 163971) 500000)) (* x4 (/ 231397 1000000)) (* x5 (/ 217883 1000000)) (* x6 (/ (- 28881) 125000)) (* x7 (/ 10249 200000)) (* x8 (/ (- 167979) 500000)) (* x9 (/ 48579 250000)) (* x10 (/ (- 167059) 1000000)) (* x11 (/ (- 35673) 200000)) (* x12 (/ (- 81013) 1000000)) (* x13 (/ (- 38281) 200000)) (/ (- 6281) 200000)) 0) (/ (- 1399) 208050)) (* (ite (<= (/ (- 829) 81015) (+ (* (- 1) x1) (* x2 (/ 465163 162030)) (* x3 (/ (- 34187) 162030)) (* x4 (/ (- 40809) 27005)) (* x5 (/ 50107 27005)) (* x6 (/ (- 12521) 81015)) (* x7 (/ 7211 10802)) (* x8 (/ 53863 162030)) (* x9 (/ 246067 162030)) (* x10 (/ (- 34273) 54010)) (* x11 (/ (- 107143) 81015)) (* x12 (/ 427799 162030)) (* x13 (/ 29481 27005)))) (+ (* x1 (/ (- 16203) 100000)) (* x2 (/ 465163 1000000)) (* x3 (/ (- 34187) 1000000)) (* x4 (/ (- 122427) 500000)) (* x5 (/ 150321 500000)) (* x6 (/ (- 12521) 500000)) (* x7 (/ 21633 200000)) (* x8 (/ 53863 1000000)) (* x9 (/ 246067 1000000)) (* x10 (/ (- 102819) 1000000)) (* x11 (/ (- 107143) 500000)) (* x12 (/ 427799 1000000)) (* x13 (/ 88443 500000)) (/ 829 500000)) 0) (/ 20641 34675)) (* (ite (<= (/ (- 120) 63853) (+ (* (- 1) x1) (* x2 (/ 65655 127706)) (* x3 (/ 206537 127706)) (* x4 (/ (- 32315) 63853)) (* x5 (/ (- 66027) 63853)) (* x6 (/ (- 96083) 63853)) (* x7 (/ 126523 127706)) (* x8 (/ 133437 63853)) (* x9 (/ 74502 63853)) (* x10 (/ (- 86525) 127706)) (* x11 (/ 166569 127706)) (* x12 (/ 40032 63853)) (* x13 (/ (- 306129) 127706)))) (+ (* x1 (/ (- 63853) 500000)) (* x2 (/ 13131 200000)) (* x3 (/ 206537 1000000)) (* x4 (/ (- 6463) 100000)) (* x5 (/ (- 66027) 500000)) (* x6 (/ (- 96083) 500000)) (* x7 (/ 126523 1000000)) (* x8 (/ 133437 500000)) (* x9 (/ 37251 250000)) (* x10 (/ (- 3461) 40000)) (* x11 (/ 166569 1000000)) (* x12 (/ 1251 15625)) (* x13 (/ (- 306129) 1000000)) (/ 3 12500)) 0) (/ (- 63331) 41610)) (* (ite (<= (/ (- 2258) 182223) (+ x1 (* x2 (/ 101896 60741)) (* x3 (/ (- 124820) 60741)) (* x4 (/ 41546 182223)) (* x5 (/ 221636 182223)) (* x6 (/ (- 5912) 182223)) (* x7 (/ (- 396194) 182223)) (* x8 (/ (- 8995) 10719)) (* x9 (/ (- 34081) 182223)) (* x10 (/ 45701 60741)) (* x11 (/ (- 104644) 60741)) (* x12 (/ 35392 182223)) (* x13 (/ 103535 60741)))) (+ (* x1 (/ 182223 1000000)) (* x2 (/ 38211 125000)) (* x3 (/ (- 18723) 50000)) (* x4 (/ 20773 500000)) (* x5 (/ 55409 250000)) (* x6 (/ (- 739) 125000)) (* x7 (/ (- 198097) 500000)) (* x8 (/ (- 30583) 200000)) (* x9 (/ (- 34081) 1000000)) (* x10 (/ 137103 1000000)) (* x11 (/ (- 78483) 250000)) (* x12 (/ 553 15625)) (* x13 (/ 62121 200000)) (/ 1129 500000)) 0) (/ 165893 104025)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 122504) 27845)) (* x3 (/ 238039 55690)) (* x4 (/ (- 36117) 55690)) (* x5 (/ (- 48611) 55690)) (* x6 (/ (- 16573) 11138)) (* x7 (/ 103301 27845)) (* x8 (/ (- 46309) 11138)) (* x9 (/ (- 109067) 55690)) (* x10 (/ 267083 55690)) (* x11 (/ 49424 27845)) (* x12 (/ (- 36449) 11138)) (* x13 (/ 36731 11138)))) (+ (* x1 (/ (- 5569) 100000)) (* x2 (/ (- 15313) 62500)) (* x3 (/ 238039 1000000)) (* x4 (/ (- 36117) 1000000)) (* x5 (/ (- 48611) 1000000)) (* x6 (/ (- 16573) 200000)) (* x7 (/ 103301 500000)) (* x8 (/ (- 46309) 200000)) (* x9 (/ (- 109067) 1000000)) (* x10 (/ 267083 1000000)) (* x11 (/ 3089 31250)) (* x12 (/ (- 36449) 200000)) (* x13 (/ 36731 200000))) 0) (/ 65981 208050)) (* (ite (<= (/ 3064 211155) (+ (* (- 1) x1) (* x2 (/ 22567 211155)) (* x3 (/ 147184 211155)) (* x4 (/ (- 1198) 42231)) (* x5 (/ 14108 10055)) (* x6 (/ 106842 70385)) (* x7 (/ 84716 211155)) (* x8 (/ (- 96401) 211155)) (* x9 (/ (- 3671) 211155)) (* x10 (/ (- 13537) 70385)) (* x11 (/ 221801 211155)) (* x12 (/ (- 26081) 211155)) (* x13 (/ (- 26210) 42231)))) (+ (* x1 (/ (- 42231) 200000)) (* x2 (/ 22567 1000000)) (* x3 (/ 9199 62500)) (* x4 (/ (- 599) 100000)) (* x5 (/ 74067 250000)) (* x6 (/ 160263 500000)) (* x7 (/ 21179 250000)) (* x8 (/ (- 96401) 1000000)) (* x9 (/ (- 3671) 1000000)) (* x10 (/ (- 40611) 1000000)) (* x11 (/ 221801 1000000)) (* x12 (/ (- 26081) 1000000)) (* x13 (/ (- 2621) 20000)) (/ (- 383) 125000)) 0) (/ (- 136538) 104025)) (* (ite (<= (/ 3037 188140) (+ x1 (* x2 (/ (- 347903) 188140)) (* x3 (/ 58865 37628)) (* x4 (/ 9916 47035)) (* x5 (/ 64921 47035)) (* x6 (/ (- 197999) 188140)) (* x7 (/ 10699 47035)) (* x8 (/ (- 24993) 18814)) (* x9 (/ 25453 188140)) (* x10 (/ (- 10202) 47035)) (* x11 (/ 70131 47035)) (* x12 (/ (- 75482) 47035)) (* x13 (/ (- 329027) 188140)))) (+ (* x1 (/ 9407 50000)) (* x2 (/ (- 347903) 1000000)) (* x3 (/ 11773 40000)) (* x4 (/ 2479 62500)) (* x5 (/ 64921 250000)) (* x6 (/ (- 197999) 1000000)) (* x7 (/ 10699 250000)) (* x8 (/ (- 24993) 100000)) (* x9 (/ 25453 1000000)) (* x10 (/ (- 5101) 125000)) (* x11 (/ 70131 250000)) (* x12 (/ (- 37741) 125000)) (* x13 (/ (- 329027) 1000000)) (/ (- 3037) 1000000)) 0) (/ (- 11669) 8322)) (* (ite (<= (/ 1763 16098) (+ x1 (* x2 (/ 15889 2683)) (* x3 (/ 41195 8049)) (* x4 (/ 277013 32196)) (* x5 (/ (- 58982) 8049)) (* x6 (/ 28827 10732)) (* x7 (/ (- 177083) 32196)) (* x8 (/ 35315 5366)) (* x9 (/ 52127 8049)) (* x10 (/ (- 30485) 16098)) (* x11 (/ (- 75771) 10732)) (* x12 (/ 137919 10732)) (* x13 (/ (- 28975) 32196)))) (+ (* x1 (/ 8049 250000)) (* x2 (/ 47667 250000)) (* x3 (/ 8239 50000)) (* x4 (/ 277013 1000000)) (* x5 (/ (- 29491) 125000)) (* x6 (/ 86481 1000000)) (* x7 (/ (- 177083) 1000000)) (* x8 (/ 21189 100000)) (* x9 (/ 52127 250000)) (* x10 (/ (- 6097) 100000)) (* x11 (/ (- 227313) 1000000)) (* x12 (/ 413757 1000000)) (* x13 (/ (- 1159) 40000)) (/ (- 1763) 500000)) 0) (/ 31843 208050)) (* (ite (<= (/ (- 1570) 233191) (+ x1 (* x2 (/ 234827 233191)) (* x3 (/ (- 222529) 233191)) (* x4 (/ (- 76031) 233191)) (* x5 (/ (- 11491) 233191)) (* x6 (/ 41296 233191)) (* x7 (/ (- 153971) 233191)) (* x8 (/ 27681 233191)) (* x9 (/ 45469 233191)) (* x10 (/ (- 31922) 233191)) (* x11 (/ (- 16956) 233191)) (* x12 (/ (- 102453) 233191)) (* x13 (/ (- 218874) 233191)))) (+ (* x1 (/ 233191 1000000)) (* x2 (/ 234827 1000000)) (* x3 (/ (- 222529) 1000000)) (* x4 (/ (- 76031) 1000000)) (* x5 (/ (- 11491) 1000000)) (* x6 (/ 2581 62500)) (* x7 (/ (- 153971) 1000000)) (* x8 (/ 27681 1000000)) (* x9 (/ 45469 1000000)) (* x10 (/ (- 15961) 500000)) (* x11 (/ (- 4239) 250000)) (* x12 (/ (- 102453) 1000000)) (* x13 (/ (- 109437) 500000)) (/ 157 100000)) 0) (/ 4468 4161)) (* (ite (<= (/ 24277 211322) (+ (* (- 1) x1) (* x2 (/ (- 104083) 105661)) (* x3 (/ (- 39937) 105661)) (* x4 (/ (- 84759) 211322)) (* x5 (/ 47243 105661)) (* x6 (/ (- 119601) 211322)) (* x7 (/ (- 20695) 105661)) (* x8 (/ (- 39143) 211322)) (* x9 (/ 19305 211322)) (* x10 (/ 77607 105661)) (* x11 (/ 179677 211322)) (* x12 (/ (- 130831) 105661)) (* x13 (/ (- 9516) 105661)))) (+ (* x1 (/ (- 105661) 500000)) (* x2 (/ (- 104083) 500000)) (* x3 (/ (- 39937) 500000)) (* x4 (/ (- 84759) 1000000)) (* x5 (/ 47243 500000)) (* x6 (/ (- 119601) 1000000)) (* x7 (/ (- 4139) 100000)) (* x8 (/ (- 39143) 1000000)) (* x9 (/ 3861 200000)) (* x10 (/ 77607 500000)) (* x11 (/ 179677 1000000)) (* x12 (/ (- 130831) 500000)) (* x13 (/ (- 2379) 125000)) (/ (- 24277) 1000000)) 0) (/ (- 1424) 1825)) (* (ite (<= (/ 34678 199195) (+ (* (- 1) x1) (* x2 (/ (- 138126) 199195)) (* x3 (/ (- 134956) 199195)) (* x4 (/ (- 305424) 199195)) (* x5 (/ 207817 199195)) (* x6 (/ 129783 199195)) (* x7 (/ (- 52510) 39839)) (* x8 (/ (- 51349) 199195)) (* x9 (/ (- 382077) 199195)) (* x10 (/ 17452 39839)) (* x11 (/ (- 150407) 199195)) (* x12 (/ 203427 199195)) (* x13 (/ 29003 39839)))) (+ (* x1 (/ (- 39839) 200000)) (* x2 (/ (- 69063) 500000)) (* x3 (/ (- 33739) 250000)) (* x4 (/ (- 19089) 62500)) (* x5 (/ 207817 1000000)) (* x6 (/ 129783 1000000)) (* x7 (/ (- 5251) 20000)) (* x8 (/ (- 51349) 1000000)) (* x9 (/ (- 382077) 1000000)) (* x10 (/ 4363 50000)) (* x11 (/ (- 150407) 1000000)) (* x12 (/ 203427 1000000)) (* x13 (/ 29003 200000)) (/ (- 17339) 500000)) 0) (/ (- 8159) 6935)) (* (ite (<= (/ 3780 131003) (+ x1 (* x2 (/ 89068 131003)) (* x3 (/ 11019 131003)) (* x4 (/ (- 206114) 131003)) (* x5 (/ 121057 131003)) (* x6 (/ 276636 131003)) (* x7 (/ 222925 131003)) (* x8 (/ (- 60657) 131003)) (* x9 (/ 43541 131003)) (* x10 (/ (- 56140) 131003)) (* x11 (/ 132001 131003)) (* x12 (/ (- 124600) 131003)) (* x13 (/ 156528 131003)))) (+ (* x1 (/ 131003 1000000)) (* x2 (/ 22267 250000)) (* x3 (/ 11019 1000000)) (* x4 (/ (- 103057) 500000)) (* x5 (/ 121057 1000000)) (* x6 (/ 69159 250000)) (* x7 (/ 8917 40000)) (* x8 (/ (- 60657) 1000000)) (* x9 (/ 43541 1000000)) (* x10 (/ (- 2807) 50000)) (* x11 (/ 132001 1000000)) (* x12 (/ (- 623) 5000)) (* x13 (/ 9783 62500)) (/ (- 189) 50000)) 0) (/ 71773 208050)) (* (ite (<= 0 (+ x1 (* x2 (/ (- 1247) 49997)) (* x3 (/ (- 274247) 99994)) (* x4 (/ 65583 99994)) (* x5 (/ (- 99606) 49997)) (* x6 (/ (- 181879) 99994)) (* x7 (/ (- 17877) 5882)) (* x8 (/ (- 250213) 99994)) (* x9 (/ (- 66095) 49997)) (* x10 (/ 21083 49997)) (* x11 (/ (- 61004) 49997)) (* x12 (/ 138887 99994)) (* x13 (/ (- 304443) 99994)))) (+ (* x1 (/ 49997 500000)) (* x2 (/ (- 1247) 500000)) (* x3 (/ (- 274247) 1000000)) (* x4 (/ 65583 1000000)) (* x5 (/ (- 49803) 250000)) (* x6 (/ (- 181879) 1000000)) (* x7 (/ (- 303909) 1000000)) (* x8 (/ (- 250213) 1000000)) (* x9 (/ (- 13219) 100000)) (* x10 (/ 21083 500000)) (* x11 (/ (- 15251) 125000)) (* x12 (/ 138887 1000000)) (* x13 (/ (- 304443) 1000000))) 0) (/ (- 70396) 104025)) (* (ite (<= 0 (+ (* (- 1) x1) (* x2 (/ (- 20609) 18577)) (* x3 (/ (- 42287) 37154)) (* x4 (/ (- 153271) 37154)) (* x5 (/ (- 52837) 37154)) (* x6 (/ 63632 18577)) (* x7 (/ 73947 74308)) (* x8 (/ (- 67242) 18577)) (* x9 (/ 102509 37154)) (* x10 (/ (- 11979) 37154)) (* x11 (/ (- 56869) 37154)) (* x12 (/ 57625 37154)) (* x13 (/ (- 253059) 74308)))) (+ (* x1 (/ (- 18577) 250000)) (* x2 (/ (- 20609) 250000)) (* x3 (/ (- 42287) 500000)) (* x4 (/ (- 153271) 500000)) (* x5 (/ (- 52837) 500000)) (* x6 (/ 3977 15625)) (* x7 (/ 73947 1000000)) (* x8 (/ (- 33621) 125000)) (* x9 (/ 102509 500000)) (* x10 (/ (- 11979) 500000)) (* x11 (/ (- 56869) 500000)) (* x12 (/ 461 4000)) (* x13 (/ (- 253059) 1000000))) 0) (/ 3029 6935)) (* (ite (<= (/ 20149 205054) (+ x1 (* x2 (/ 95195 205054)) (* x3 (/ (- 80283) 205054)) (* x4 (/ (- 166643) 205054)) (* x5 (/ (- 71736) 102527)) (* x6 (/ 97320 102527)) (* x7 (/ (- 286211) 205054)) (* x8 (/ 10053 12062)) (* x9 (/ (- 90849) 102527)) (* x10 (/ 31478 102527)) (* x11 (/ 38721 102527)) (* x12 (/ (- 94533) 102527)) (* x13 (/ (- 157802) 102527)))) (+ (* x1 (/ 102527 500000)) (* x2 (/ 19039 200000)) (* x3 (/ (- 80283) 1000000)) (* x4 (/ (- 166643) 1000000)) (* x5 (/ (- 8967) 62500)) (* x6 (/ 2433 12500)) (* x7 (/ (- 286211) 1000000)) (* x8 (/ 170901 1000000)) (* x9 (/ (- 90849) 500000)) (* x10 (/ 15739 250000)) (* x11 (/ 38721 500000)) (* x12 (/ (- 94533) 500000)) (* x13 (/ (- 78901) 250000)) (/ (- 20149) 1000000)) 0) (/ 301061 208050)) (* (ite (<= (/ 3755 24363) (+ (* (- 1) x1) (* x2 (/ (- 99179) 8121)) (* x3 (/ (- 20089) 24363)) (* x4 (/ 78485 8121)) (* x5 (/ 55183 8121)) (* x6 (/ 64735 8121)) (* x7 (/ 357062 24363)) (* x8 (/ 246484 24363)) (* x9 (/ (- 117043) 8121)) (* x10 (/ (- 204638) 24363)) (* x11 (/ 120556 8121)) (* x12 (/ (- 325712) 24363)) (* x13 (/ 12787 2707)))) (+ (* x1 (/ (- 24363) 1000000)) (* x2 (/ (- 297537) 1000000)) (* x3 (/ (- 20089) 1000000)) (* x4 (/ 47091 200000)) (* x5 (/ 165549 1000000)) (* x6 (/ 38841 200000)) (* x7 (/ 178531 500000)) (* x8 (/ 61621 250000)) (* x9 (/ (- 351129) 1000000)) (* x10 (/ (- 102319) 500000)) (* x11 (/ 90417 250000)) (* x12 (/ (- 20357) 62500)) (* x13 (/ 115083 1000000)) (/ (- 751) 200000)) 0) (/ (- 112843) 208050)) (* (ite (<= (/ (- 4247) 192830) (+ (* (- 1) x1) (* x2 (/ 25360 19283)) (* x3 (/ (- 36999) 19283)) (* x4 (/ 155699 192830)) (* x5 (/ (- 37579) 96415)) (* x6 (/ 76169 192830)) (* x7 (/ (- 26338) 19283)) (* x8 (/ 119193 192830)) (* x9 (/ 176428 96415)) (* x10 (/ 303139 192830)) (* x11 (/ 125391 96415)) (* x12 (/ 255753 192830)) (* x13 (/ 131686 96415)))) (+ (* x1 (/ (- 19283) 100000)) (* x2 (/ 317 1250)) (* x3 (/ (- 36999) 100000)) (* x4 (/ 155699 1000000)) (* x5 (/ (- 37579) 500000)) (* x6 (/ 76169 1000000)) (* x7 (/ (- 13169) 50000)) (* x8 (/ 119193 1000000)) (* x9 (/ 44107 125000)) (* x10 (/ 303139 1000000)) (* x11 (/ 125391 500000)) (* x12 (/ 255753 1000000)) (* x13 (/ 65843 250000)) (/ 4247 1000000)) 0) (/ 173507 208050)) (* (ite (<= (/ 5518 20375) (+ (* (- 1) x1) (* x2 (/ 77996 61125)) (* x3 (/ (- 79319) 61125)) (* x4 (/ (- 8782) 61125)) (* x5 (/ 63454 20375)) (* x6 (/ (- 34441) 20375)) (* x7 (/ 31231 12225)) (* x8 (/ 56318 61125)) (* x9 (/ (- 19377) 20375)) (* x10 (/ (- 355166) 61125)) (* x11 (/ (- 113452) 61125)) (* x12 (/ (- 21102) 4075)) (* x13 (/ (- 265159) 61125)))) (+ (* x1 (/ (- 489) 8000)) (* x2 (/ 19499 250000)) (* x3 (/ (- 79319) 1000000)) (* x4 (/ (- 4391) 500000)) (* x5 (/ 95181 500000)) (* x6 (/ (- 103323) 1000000)) (* x7 (/ 31231 200000)) (* x8 (/ 28159 500000)) (* x9 (/ (- 58131) 1000000)) (* x10 (/ (- 177583) 500000)) (* x11 (/ (- 28363) 250000)) (* x12 (/ (- 31653) 100000)) (* x13 (/ (- 265159) 1000000)) (/ (- 8277) 500000)) 0) (/ (- 2781) 69350)) (* (ite (<= 0 (+ x1 (* x2 (/ (- 49543) 5384)) (* x3 (/ 202551 10768)) (* x4 (/ 32035 5384)) (* x5 (/ (- 65925) 10768)) (* x6 (/ 69645 2692)) (* x7 (/ (- 12664) 673)) (* x8 (/ (- 50901) 10768)) (* x9 (/ 194359 10768)) (* x10 (/ (- 2492) 673)) (* x11 (/ 142235 10768)) (* x12 (/ 291937 10768)) (* x13 (/ (- 73887) 5384)))) (+ (* x1 (/ 673 62500)) (* x2 (/ (- 49543) 500000)) (* x3 (/ 202551 1000000)) (* x4 (/ 6407 100000)) (* x5 (/ (- 2637) 40000)) (* x6 (/ 13929 50000)) (* x7 (/ (- 3166) 15625)) (* x8 (/ (- 50901) 1000000)) (* x9 (/ 194359 1000000)) (* x10 (/ (- 623) 15625)) (* x11 (/ 28447 200000)) (* x12 (/ 291937 1000000)) (* x13 (/ (- 73887) 500000))) 0) (/ 1651 3650)) (* (ite (<= (/ 1931 21827) (+ x1 (* x2 (/ 193532 21827)) (* x3 (/ (- 24623) 3358)) (* x4 (/ (- 91625) 43654)) (* x5 (/ (- 16586) 21827)) (* x6 (/ (- 14241) 21827)) (* x7 (/ 38117 43654)) (* x8 (/ 154727 43654)) (* x9 (/ 457645 43654)) (* x10 (/ 182894 21827)) (* x11 (/ (- 138677) 21827)) (* x12 (/ 208427 43654)) (* x13 (/ 199811 43654)))) (+ (* x1 (/ 21827 500000)) (* x2 (/ 48383 125000)) (* x3 (/ (- 320099) 1000000)) (* x4 (/ (- 733) 8000)) (* x5 (/ (- 8293) 250000)) (* x6 (/ (- 14241) 500000)) (* x7 (/ 38117 1000000)) (* x8 (/ 154727 1000000)) (* x9 (/ 91529 200000)) (* x10 (/ 91447 250000)) (* x11 (/ (- 138677) 500000)) (* x12 (/ 208427 1000000)) (* x13 (/ 199811 1000000)) (/ (- 1931) 500000)) 0) (/ 239507 208050)) (* (ite (<= (/ (- 16238) 19865) (+ (* (- 1) x1) (* x2 (/ (- 344911) 19865)) (* x3 (/ 279012 19865)) (* x4 (/ 21827 19865)) (* x5 (/ (- 126524) 19865)) (* x6 (/ (- 23949) 3973)) (* x7 (/ (- 16656) 3973)) (* x8 (/ 225647 19865)) (* x9 (/ (- 498016) 19865)) (* x10 (/ (- 264228) 19865)) (* x11 (/ 323041 19865)) (* x12 (/ 1888 685)) (* x13 (/ 209267 19865)))) (+ (* x1 (/ (- 3973) 200000)) (* x2 (/ (- 344911) 1000000)) (* x3 (/ 69753 250000)) (* x4 (/ 21827 1000000)) (* x5 (/ (- 31631) 250000)) (* x6 (/ (- 23949) 200000)) (* x7 (/ (- 1041) 12500)) (* x8 (/ 225647 1000000)) (* x9 (/ (- 15563) 31250)) (* x10 (/ (- 66057) 250000)) (* x11 (/ 323041 1000000)) (* x12 (/ 1711 31250)) (* x13 (/ 209267 1000000)) (/ 8119 500000)) 0) (/ (- 108491) 104025)) (* (ite (<= 0 (+ x1 (* x2 (/ 165830 186883)) (* x3 (/ 82848 186883)) (* x4 (/ 81023 186883)) (* x5 (/ (- 37642) 186883)) (* x6 (/ (- 265952) 186883)) (* x7 (/ (- 82928) 186883)) (* x8 (/ (- 254906) 186883)) (* x9 (/ 89568 186883)) (* x10 (/ 52082 186883)) (* x11 (/ 154135 186883)) (* x12 (/ (- 124292) 186883)) (* x13 (/ (- 134743) 186883)))) (+ (* x1 (/ 186883 1000000)) (* x2 (/ 16583 100000)) (* x3 (/ 2589 31250)) (* x4 (/ 81023 1000000)) (* x5 (/ (- 18821) 500000)) (* x6 (/ (- 8311) 31250)) (* x7 (/ (- 5183) 62500)) (* x8 (/ (- 127453) 500000)) (* x9 (/ 2799 31250)) (* x10 (/ 26041 500000)) (* x11 (/ 30827 200000)) (* x12 (/ (- 31073) 250000)) (* x13 (/ (- 134743) 1000000))) 0) (/ (- 141161) 104025))))
)
;; )

)

))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

))

(check-sat)
